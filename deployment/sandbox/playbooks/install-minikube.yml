---
  - hosts: all
    become: true
    vars:
        VMIP: "{{ hostvars[groups['SandboxVM'][0]]['VMIP'] }}"
    tasks:
      - name: Install pyyaml
        pip: name=pyyaml

      - name: Install python openshift
        pip: name=openshift

      - name: Check the /usr/local/bin/ directory
        file: 
          path: /usr/local/bin/
          state: directory
      
      - name: Adding key for virtualbox
        apt_key:  
          url:  https://www.virtualbox.org/download/oracle_vbox_2016.asc
          state: present

      - name: Installing virtual box
        apt: name=virtualbox state=present update_cache=yes

      - name: Downloading minikube
        get_url: 
          url: https://storage.googleapis.com/minikube/releases/v1.7.3/minikube-linux-amd64
          dest: /usr/local/bin/minikube
          mode: '0777'

      - name: minikube status
        command: minikube status
        register: status_minikube
        failed_when: 
          - status_minikube.rc > 7
          # - status_minikube.stdout_lines[0].split(':')[1] | replace(' ','')!="" 
          # - status_minikube.stdout_lines[0].split(':')[1] | replace(' ','') != "Running"

      - name: Starting minikube
        command: minikube start --vm-driver=none
        when: status_minikube.stdout_lines[0].split(':')[1] | replace(' ','')!="Running"

      - name: Getting latest version of kubectl
        uri:
          url:  https://storage.googleapis.com/kubernetes-release/release/stable.txt
          return_content: yes
        register: version_kubectl
      
      - debug:
          msg: "{{ version_kubectl.content | trim }}"

      - name: Downloading latest version of kubectl
        get_url: 
          url:  "https://storage.googleapis.com/kubernetes-release/release/{{ version_kubectl.content | trim }}/bin/linux/amd64/kubectl"
          dest: /usr/local/bin/kubectl
          mode: '0777'

      - name: Enabling ingress for minikube
        command: minikube addons enable ingress
      
      - name: Wait for minikube ingress to be up and running
        wait_for:
          timeout: 100

      - name: Changing default port for nginx-ingress-controller
        command: 'sed -i -e "s/hostPort: 80/hostPort: 3000/1" /etc/kubernetes/addons/ingress-dp.yaml'

      - name: Wait for Nginx controller to get up
        wait_for:
          timeout: 120

      - name: Changing 443 port for nginx-ingress-controller
        command: 'sed -i -e "s/hostPort: 443/hostPort: 3001/1" /etc/kubernetes/addons/ingress-dp.yaml'
      
      - name: Wait for Nginx controller to get up
        wait_for:
          timeout: 120

      - name: Deploying the ingress controller
        k8s:
          state: present
          src: /etc/kubernetes/addons/ingress-dp.yaml

      - name: Wait for Nginx controller to get up
        wait_for:
          timeout: 120

      - name: Install nginx
        apt: name=nginx state=present update_cache=yes

      - name: Allowing port 9001
        ufw:
          rule: allow
          name: 'Nginx HTTP'

      - name: Remove old default file of nginx
        file:
          path: /etc/nginx/sites-available/default
          state: absent

      - name: getting private IP of machine
        shell: hostname -I | awk '{print $1}'
        register: private_ip

      # - name: Set private DNS https://sandbox.com
      #   lineinfile: 
      #     dest: /etc/hosts
      #     line: '{{ private_ip.stdout }} sandbox.com'
      #     insertafter: 'EOF'
      #     state: present
        
      # - name: Create a directory for sandbox.com in let's encrypt directory
      #   file:
      #     path: /etc/letsencrypt/live/sandbox.com
      #     state: directory
      #     recurse: yes

      # - name: Copying fullchain.pem into let's encrypt directory
      #   copy:
      #     src: ../external-files/fullchain.pem
      #     dest: /etc/letsencrypt/live/sandbox.com/fullchain.pem
      
      # - name: Copying privkey.pem into let's encrypt directory
      #   copy:
      #     src: ../external-files/privkey.pem
      #     dest: /etc/letsencrypt/live/sandbox.com/privkey.pem

      - name: Changing configurations for nginx default file
        template:
          src: templates/nginx-default.j2
          dest: /etc/nginx/sites-available/default

      - name: Restarting nginx
        service: name=nginx state=restarted enabled=yes
