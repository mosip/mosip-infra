---
  - hosts: all
    become: true
    tasks:
      - stat: 
          path: /root/hadoop
        register: hadoop_stat
      
      - debug:
          msg: "{{ hadoop_stat }}"

      - name: Download HDFS tar
        get_url: 
          url:  https://archive.apache.org/dist/hadoop/core/hadoop-2.8.1/hadoop-2.8.1.tar.gz
          dest: "{{ playbook_dir }}"
        when: hadoop_stat.stat.exists == false

      - name: Unarchiving hadoop.tar.gz
        unarchive:
          src: hadoop-2.8.1.tar.gz
          dest: "{{ playbook_dir }}"
        when: hadoop_stat.stat.exists == false

      - name: Unarchiving hadoop.tar.gz
        shell: mv hadoop-2.8.1 /root/hadoop
        when: hadoop_stat.stat.exists == false

      - name: Setting Hadoop Path
        blockinfile:
          path: /root/.bashrc
          block: |
            export HADOOP_HOME=$HOME/hadoop
            export HADOOP_CONF_DIR=$HOME/hadoop/etc/hadoop
            export HADOOP_MAPRED_HOME=$HOME/hadoop
            export HADOOP_COMMON_HOME=$HOME/hadoop
            export HADOOP_HDFS_HOME=$HOME/hadoop
            export YARN_HOME=$HOME/hadoop
            export PATH=$PATH:$HOME/hadoop/bin
          insertafter: 'EOF'
          state: present
          marker: "# {mark} HADOOP PATHS BLOCK"
      
      - name: Source .bashrc
        shell: source /root/.bashrc && echo $JAVA_HOME && echo $HADOOP_HOME
        args:
          executable: /bin/bash

      - name: Deleting old core-site.xml
        file: 
          path: /root/hadoop/etc/hadoop/core-site.xml
          state: absent

      - name: getting private IP of machine
        shell: hostname -I | awk '{print $1}'
        register: private_ip

      - name: Creating core-site.xml
        blockinfile:
          path: /root/hadoop/etc/hadoop/core-site.xml
          block: |
            <?xml version="1.0" encoding="UTF-8"?>
            <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
            <configuration>
            <property>
            <name>fs.default.name</name>
            <value>hdfs://{{ private_ip.stdout }}:9000</value>
            </property>
            </configuration>
          state: present
          create: yes
          marker: ''
          owner: 500
          group: 500
          mode: '0664'

      - name: Deleting old hdfs-site.xml
        file: 
          path: /root/hadoop/etc/hadoop/hdfs-site.xml
          state: absent

      - name: Creating hdfs-site.xml
        blockinfile:
          path: /root/hadoop/etc/hadoop/hdfs-site.xml
          block: |
            <?xml version="1.0" encoding="UTF-8"?>
            <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
            <configuration>
            <property>
            <name>dfs.namenode.name.dir</name>
            <value>/root/hadoop/data/nameNode</value>
            </property>
            <property>
            <name>dfs.datanode.data.dir</name>
            <value>/root/hadoop/data/dataNode</value>
            </property>
            <property>
            <name>dfs.replication</name>
            <value>1</value>
            </property>
            <property>
            <name>dfs.permission</name>
            <value>false</value>
            </property>
            </configuration>
          state: present
          create: yes
          marker: ''
          owner: 500
          group: 500
          mode: '0664'

      - name: Deleting old  mapred-site.xml
        file: 
          path: /root/hadoop/etc/hadoop/mapred-site.xml
          state: absent

      - name: Creating  mapred-site.xml
        blockinfile:
          path: /root/hadoop/etc/hadoop/mapred-site.xml
          block: |
            <?xml version="1.0" encoding="UTF-8"?>
            <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
            <configuration>
            <property>
            <name>mapreduce.framework.name</name>
            <value>yarn</value>
            </property>
            </configuration>
          state: present
          create: yes
          marker: ''
          owner: 500
          group: 500
          mode: '0664'

      - name: Deleting old yarn-site.xml
        file: 
          path: /root/hadoop/etc/hadoop/yarn-site.xml
          state: absent

      - name: Creating yarn-site.xml
        blockinfile:
          path: /root/hadoop/etc/hadoop/yarn-site.xml
          block: |
            <?xml version="1.0" encoding="UTF-8"?>
            <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
            <configuration>
            <property>
            <name>yarn.nodemanager.aux-services</name>
            <value>mapreduce_shuffle</value>
            </property>
            <property>
            <name>yarn.nodemanager.auxservices.mapreduce.shuffle.class</name>
            <value>org.apache.hadoop.mapred.ShuffleHandler</value>
            </property>
            </configuration>
          state: present
          create: yes
          marker: ''
          owner: 500
          group: 500
          mode: '0664'

      - name: Remove blank lines blockinfile put in
        lineinfile :
          path: "{{ item }}"
          state: absent
          regexp: '^$'
        loop:
            - /root/hadoop/etc/hadoop/core-site.xml
            - /root/hadoop/etc/hadoop/hdfs-site.xml
            - /root/hadoop/etc/hadoop/mapred-site.xml
            - /root/hadoop/etc/hadoop/yarn-site.xml

      - name: Making NameNode directories
        file:
          path: /root/hadoop/data/nameNode
          state: directory
          recurse: yes 
        register: namenode_stat

      - debug:
          msg: "{{ namenode_stat.changed }}"

      - name: Making dataNode directories
        file:
          path: /root/hadoop/data/dataNode
          state: directory
          recurse: yes

      - name: Changing hadoop-env.properties
        lineinfile:
          path: /root/hadoop/etc/hadoop/hadoop-env.sh
          regexp: '^export JAVA_HOME='
          line: export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jre

      - name: Format HDFS via NameNode
        shell: ./hadoop namenode -format
        args:
          chdir: /root/hadoop/bin/
        when: namenode_stat.changed == true
      
      - name: Stopping any NameNode running
        shell: ./hadoop-daemon.sh stop namenode
        args:
          chdir: /root/hadoop/sbin/

      - name: Starting NameNode
        shell: ./hadoop-daemon.sh start namenode
        args:
          chdir: /root/hadoop/sbin/

      - name: Stopping any DataNode running
        shell: ./hadoop-daemon.sh stop datanode
        args:
          chdir: /root/hadoop/sbin/

      - name: Starting DataNode
        shell: ./hadoop-daemon.sh start datanode
        args:
          chdir: /root/hadoop/sbin/
      
      - name: Stopping any ResourceManager running
        shell: ./yarn-daemon.sh stop resourcemanager
        args:
          chdir: /root/hadoop/sbin/

      - name: Starting ResourceManager
        shell: ./yarn-daemon.sh start resourcemanager
        args:
          chdir: /root/hadoop/sbin/

      - name: Stopping any NodeManager running
        shell: ./yarn-daemon.sh stop nodemanager
        args:
          chdir: /root/hadoop/sbin/

      - name: Starting NodeManager
        shell: ./yarn-daemon.sh start nodemanager
        args:
          chdir: /root/hadoop/sbin/

      - name: Stopping any HistoryServer running
        shell: ./mr-jobhistory-daemon.sh stop historyserver
        args:
          chdir: /root/hadoop/sbin/

      - name: Starting HistoryServer
        shell: ./mr-jobhistory-daemon.sh start historyserver
        args:
          chdir: /root/hadoop/sbin/
       
      - name: Creating hdfs users
        user: 
          name: "{{ item }}"
          create_home: no
        loop: 
          - regprocessor-qa
          - prereg
          - idrepo-qa
      
      - name: Creating HDFS user directories
        shell: . /root/.bashrc && hdfs dfs -mkdir -p /user/"{{ item }}"
        loop:
          - regprocessor-qa
          - prereg
          - idrepo-qa

      - name: Giving user permission for directories created in previous step
        shell: . /root/.bashrc && hdfs dfs -chown -R "{{ item }}":"{{ item }}" /user/"{{ item }}"
        loop:
          - regprocessor-qa
          - prereg
          - idrepo-qa