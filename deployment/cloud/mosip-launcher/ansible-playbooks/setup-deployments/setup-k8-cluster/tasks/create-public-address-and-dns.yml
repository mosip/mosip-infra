  
  - name: Including Deployments Kubernetes cluster configuration values from variable file.
    include_vars:
        file: ../configurations.yml
        name: k8
  
  - name:  Public IP and domain name creation for Deployments Kubernetes cluster
    environment:
        ARM_SUBSCRIPTION_ID: "{{ common.subscription_id }}"
        ARM_CLIENT_ID: "{{ common.client_id }}"
        ARM_CLIENT_SECRET: "{{ common.client_secret }}"
        ARM_TENANT_ID: "{{ common.tenant_id }}"
    terraform:
      project_path: '../../../terraform-scripts/terraform-deployments-setup/terraform-k8/terraform-public-ip'
      state: present
      force_init: true
      variables:
        location: "{{ k8.location }}"
        resource_group_name: "{{lookup('file', '~/k8_deployment_node_resource_group_{{ env_name }}.txt') }}"
        domain_name_label: "{{ application_name }}-deployments"

  - name: Getting Domain Name
    command: terraform output -state={{ playbook_dir }}/../../../terraform-scripts/terraform-deployments-setup/terraform-k8/terraform-public-ip/terraform.tfstate domain_name 
    register: output_domain_name_deployments_cluster_{{ env_name }}

  - name: Getting Public IP Address
    command: terraform output -state={{ playbook_dir }}/../../../terraform-scripts/terraform-deployments-setup/terraform-k8/terraform-public-ip/terraform.tfstate public_ip 
    register: output_public_ip_deployments_cluster_{{ env_name }}

  - name: Printing Domain Name
    debug: msg="{{ hostvars['localhost']['output_domain_name_deployments_cluster_' + env_name] | json_query('stdout')}}"
  
  - name: Printing Public IP Address
    debug: msg="{{ hostvars['localhost']['output_public_ip_deployments_cluster_' + env_name] | json_query('stdout')}}"

  - name: output_public_ip_deployments_cluster for {{ env_name }} environment
    set_fact:
      output_public_ip_deployments_cluster_fact_{{ env_name }}: "{{ hostvars['localhost']['output_public_ip_deployments_cluster_' + env_name] | json_query('stdout')}}"

  - name: output_domain_name_deployments_cluster for {{ env_name }} environment
    set_fact:
      output_domain_name_deployments_cluster_fact_{{ env_name }}: "{{ hostvars['localhost']['output_domain_name_deployments_cluster_' + env_name] | json_query('stdout')}}"

  - name: Creating template for adding deployments cluster public ip for {{ env_name }} as credential to jenkins servers
    template:
      src: ../configuration/setup-deployments-cluster-ip-jenkins.j2
      dest: /tmp/setup-deployments-cluster-ip-jenkins.groovy
      mode: u=rw,g=rw,o=rw

  - name: Adding deployments cluster public ip for {{ env_name }} as credential to jenkins servers
    jenkins_script:
      script: "{{ lookup('file', '/tmp/setup-deployments-cluster-ip-jenkins.groovy') }}"
      url: "{{ hostvars['localhost']['devops_cluster_dns'] }}/jenkins"
      user:  "{{ hostvars['localhost']['jenkins_username'] }}"
      password: "{{ hostvars['localhost']['jenkins_password'] }}"
    when: devops_cluster_dns is defined and jenkins_username is defined and jenkins_password is defined

  - name: Adding deployments cluster ip for {{ env_name }} as credential to jenkins servers
    jenkins_script:
      script: "{{ lookup('file', '/tmp/setup-deployments-cluster-ip-jenkins.groovy') }}"
      url: "{{ jenkins_url }}"
      user:  "{{ jenkins_username}}"
      password: "{{ jenkins_password }}"
    when: devops_cluster_dns is not defined
