- name: Setting env_name for current host
  set_fact:
    env_name: "{{ inventory_hostname | replace('postgres-vm-','') }}"

- name: Printing env name for current host
  debug: msg= "{{ env_name  }}"

- name: Check uname for postgres server for {{ env_name  }}
  command: uname -a
  register: system_info_postgres

- name: Printing system info for postgres for {{ env_name  }}
  debug: msg="{{ system_info_postgres | json_query('stdout')  }}"

- name: Creates directory for ssh
  become: yes
  file:
    path: /root/.ssh
    state: directory


- name: putting private key in postgres server for {{ env_name }} for checking out github code
  become: yes
  template:
    src: ~/.ssh/id_rsa
    dest: "~/.ssh/id_rsa"
    mode: u=rw,g=,o=

- name: putting public key in postgres server for {{ env_name }} for checking out github code
  become: yes
  template:
    src: ~/.ssh/id_rsa.pub
    dest: "~/.ssh/id_rsa.pub"
    mode: u=rw,g=,o=

- name: install Postgres rpm from a remote repo
  become: yes
  yum:
    name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
    state: present

- name: Install postgresql10 for {{ env_name  }}
  become: yes
  yum:
    name: postgresql10  
    disablerepo: pgdg95
    state: present

- name: Install postgresql10-server for {{ env_name  }}
  become: yes
  yum:
    name: postgresql10-server
    disablerepo: pgdg95
    state: present

- name: Intializing postgres db
  become: yes
  command: "/usr/pgsql-10/bin/postgresql-10-setup initdb"
  args:
    creates: /var/lib/pgsql/10/data/pg_hba.conf

- name: Enable postgresql-10 for {{ env_name  }}
  become: yes
  service:
    name: postgresql-10 
    state: started
    enabled: yes

- name: updating listen address for postgres server for {{ env_name  }}
  become: yes
  command: sed -i -e "s/#listen_addresses = 'localhost'/listen_addresses = '*'/g" /var/lib/pgsql/10/data/postgresql.conf

- name: updating port info for postgres server for {{ env_name  }}
  become: yes
  command: sed -i -e 's/#port = 5432/port = 9001/g' /var/lib/pgsql/10/data/postgresql.conf

- name: updating unix_socket_directories for postgres server for {{ env_name  }}
  become: yes
  command: sed -i -e "s|#unix_socket_directories = '/var/run/postgresql, /tmp'|unix_socket_directories = '/var/run/postgresql, /tmp'|g" /var/lib/pgsql/10/data/postgresql.conf

- name: updating max connections for postgres server for {{ env_name  }}
  become: yes
  command: sed -i -e 's/max_connections = 100  /max_connections = 1000  /g' /var/lib/pgsql/10/data/postgresql.conf

- name: updating shared buffers for postgres server for {{ env_name  }}
  become: yes
  command: sed -i -e 's/shared_buffers = 128MB/shared_buffers = 2GB/g' /var/lib/pgsql/10/data/postgresql.conf

# - name: Updating HBA configuration for password change
#   become: yes
#   template:
#     src: ../../configuration/postgres/temporary-hba-configuration-for-password-setup.j2
#     dest: /var/lib/pgsql/10/data/pg_hba.conf
#     mode: u=rw,g=,o=

- name: Restart postgresql-10 for {{ env_name  }}
  become: yes
  service:
    name: postgresql-10 
    state: restarted
    enabled: yes

- name: Including password configuration values from variable file.
  include_vars:
    file: ../../../../configurations/postgres-configuration.yml
    name: password

- name: Open port 9001
  become: yes
  firewalld:
    port: 9001/tcp
    permanent: yes
    immediate: yes
    state: enabled

- name: Change password for user postgres
  run_once: true
  become: yes
  command: sudo -u postgres PGPASSWORD={{ password.postgres_password }} psql --port=9001 -c "ALTER USER postgres PASSWORD '{{ password.postgres_password }}';"


- name: Updating final HBA configuration
  become: yes
  template:
    src: ../../configuration/postgres/hba-configuration.j2
    dest: /var/lib/pgsql/10/data/pg_hba.conf
    mode: u=rw,g=,o=

- name: Restart postgresql-10 for {{ env_name  }}
  become: yes
  service:
    name: postgresql-10 
    state: restarted
    enabled: yes

- name: Set environment varibale  PGPASSWORD
  become: yes
  run_once: true
  lineinfile:
    dest: /etc/profile
    line: "export PGPASSWORD={{ password.postgres_password }}"
    state: present
    insertafter: EOF

- name: Installing git
  become: yes
  yum:
    name: git
    disablerepo: pgdg95
    state: present

- name: copying ssh config to postgres server for {{ env_name }}
  become: yes
  template:
    src: ../../configuration/postgres/ssh-config.j2
    dest: "~/.ssh/config"
    mode: u=rw,g=,o=

- name: Cloning Postgres scripts to source from SCM .. This may take some time
  become: yes
  git: 
    repo: "{{ hostvars['localhost']['scm_url'] }}"
    depth: 1
    version: "{{ hostvars['localhost']['scm_branch'] }}"
    dest: /opt/mosip


- name: copying shell script for sourcing psql scripts in postgres for {{ env_name }}
  become: yes
  template:
    src: ../../configuration/postgres/sql-scripts.j2
    dest: "/opt/postgres-script.sh"
    mode: u=rwx,g=rw,o=rw

- name: Sourcing the sql scripts
  run_once: true
  become: yes
  command: sh /opt/postgres-script.sh

  
  
  



