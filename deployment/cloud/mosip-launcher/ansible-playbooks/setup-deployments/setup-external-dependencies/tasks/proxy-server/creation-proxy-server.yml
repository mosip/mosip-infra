- name: Printing User Inputs for External dependencies for {{ env_name }} environment
  debug:
    msg:
      - "You have entered following inputs"
      - "********************************************************************"
      - "External dependencies in {{ env_name  }} environment will be deployed with the following prefix :"
      - "Name : {{ config.resource_group_name }}-{{ env_name  }}"
      - "Global Username : {{ global_username }}"
    # # - "Global Password : {{ global_password }}"

- name: Confirm Inputs for External dependencies for {{ env_name }} environment
  pause: prompt='Please confirm you want to continue with above values! Press return to continue. Press Ctrl+c and then "a" to abort'

- name:  Public IP and domain name creation for Proxy Server for {{ env_name }} environment
  environment:
      ARM_SUBSCRIPTION_ID: "{{ common.subscription_id }}"
      ARM_CLIENT_ID: "{{ common.client_id }}"
      ARM_CLIENT_SECRET: "{{ common.client_secret }}"
      ARM_TENANT_ID: "{{ common.tenant_id }}"
  terraform:
    project_path: '../../../terraform-scripts/terraform-deployments-setup/terraform-proxy-server-setup/terraform-public-ip'
    workspace: "{{ env_name  }}"
    state: present
    force_init: true
    variables:
      location: "{{ config.location }}"
      resource_group_name: "{{ config.resource_group_name }}-{{ env_name }}-rg"
      domain_name_label: "{{ application_name }}-{{ env_name  }}-proxy-server"
  register: output_public_ip_proxy_server_creation_{{ env_name }}

- name: Getting Public IP ID for proxy server for  {{ env_name }} environment
  command: terraform output -state={{ playbook_dir }}/../../../terraform-scripts/terraform-deployments-setup/terraform-proxy-server-setup/terraform-public-ip/terraform.tfstate.d/{{ env_name }}/terraform.tfstate public_ip_id
  register: output_public_ip_id_proxy_server_{{ env_name }}

- name: Printing Public IP ID variable for proxy server for {{ env_name }} environment
  debug: msg="{{ hostvars['localhost']['output_public_ip_id_proxy_server_' + env_name] | json_query('stdout')}}"


- name: Getting Public IP of proxyserver for {{ env_name }} environment
  command: terraform output -state={{ playbook_dir }}/../../../terraform-scripts/terraform-deployments-setup/terraform-proxy-server-setup/terraform-public-ip/terraform.tfstate.d/{{ env_name  }}/terraform.tfstate public_ip
  register: output_public_ip_proxy_server_{{ env_name }}

- name: Printing Public IP variable for proxy server for {{ env_name }} environment
  debug: msg="{{ hostvars['localhost']['output_public_ip_proxy_server_' + env_name] | json_query('stdout')}}"

- name: Getting Domain Name of proxyserver  for {{ env_name }} environment
  command: terraform output -state={{ playbook_dir }}/../../../terraform-scripts/terraform-deployments-setup/terraform-proxy-server-setup/terraform-public-ip/terraform.tfstate.d/{{ env_name  }}/terraform.tfstate domain_name
  register: output_domain_name_proxy_server_{{ env_name }}

- name: Printing Domain name variable for proxy server for {{ env_name }} environment
  debug: msg="{{ hostvars['localhost']['output_domain_name_proxy_server_' + env_name] | json_query('stdout')}}"

- name: output_domain_name_proxy_server for {{ env_name }} environment
  set_fact:
    output_domain_name_proxy_server_fact_{{ env_name }}: "{{ hostvars['localhost']['output_domain_name_proxy_server_' + env_name] | json_query('stdout')}}"

- name: output_public_ip_proxy_server for {{ env_name }} environment
  set_fact:
    output_public_ip_proxy_server_fact_{{ env_name }}: "{{ hostvars['localhost']['output_public_ip_proxy_server_' + env_name] | json_query('stdout')}}"


- name: Creating Proxy Server VM for {{ env_name }} environment
  environment:
      ARM_SUBSCRIPTION_ID: "{{ common.subscription_id }}"
      ARM_CLIENT_ID: "{{ common.client_id }}"
      ARM_CLIENT_SECRET: "{{ common.client_secret }}"
      ARM_TENANT_ID: "{{ common.tenant_id }}"
  terraform:
    project_path: '../../../terraform-scripts/terraform-deployments-setup/terraform-proxy-server-setup/terraform-vm-setup'
    state: present
    workspace: "{{ env_name  }}"
    force_init: true
    variables:
      application_name: "{{ config.resource_group_name }}-{{ env_name  }}"
      resource_group_name: "{{ config.resource_group_name }}-{{ env_name  }}-rg"
      public_ip_id: "{{ hostvars['localhost']['output_public_ip_id_proxy_server_' + env_name] | json_query('stdout')}}"
      subnet_id: "{{ hostvars['localhost']['output_subnet_id_' + env_name] | json_query('stdout')}}"
      hostname: "{{ config.resource_group_name }}-{{ env_name  }}-proxy-server"
      username: "{{ global_username }}"
      # # password: "{{ global_password }}"
      location: "{{ config.location }}"
      vm_size: "{{ config.external_dependencies_vm_size }}"
      ssh_public_key: "~/.ssh/id_rsa.pub"
  register: output_nginx_vm_setup_{{ env_name }}

- name: Printing output of Proxy Server VM creation for {{ env_name }} environment
  debug: msg="{{ hostvars['localhost']['output_nginx_vm_setup_' + env_name] | json_query('stdout')}}"

- name: Adding proxy server host in ansible for configuration for {{ env_name }} environment
  add_host:
    hostname: "proxy-server-vm-{{ env_name  }}"
    ansible_host: "{{ hostvars['localhost']['output_public_ip_proxy_server_' + env_name] | json_query('stdout')}}"
    ansible_user: "{{ global_username }}"
    ansible_port: 22

- name: private_key_content for {{ env_name }} environment
  set_fact:
    private_key_content_{{ env_name  }}: "{{ lookup('file', '~/.ssh/id_rsa') }}"

- name: add proxy server host for {{ env_name }} environment to known hosts
  connection: local
  run_once: true
  shell: "ssh-keyscan -H {{ hostvars['localhost']['output_public_ip_proxy_server_' + env_name] | json_query('stdout')}} >> ~/.ssh/known_hosts"

- name: Creating template for adding  proxy server dns to jenkins for {{ env_name }}
  template:
    src: ../../configuration/setup-proxy-server-dns-jenkins.j2
    dest: /tmp/setup-proxy-server-dns-jenkins.groovy
    mode: u=rw,g=rw,o=rw

- name: Adding proxy server dns to jenkins
  jenkins_script:
    script: "{{ lookup('file', '/tmp/setup-proxy-server-dns-jenkins.groovy') }}"
    url: "{{ hostvars['localhost']['devops_cluster_dns'] }}/jenkins"
    user:  "{{ hostvars['localhost']['jenkins_username'] }}"
    password: "{{ hostvars['localhost']['jenkins_password'] }}"
  when: devops_cluster_dns is defined and jenkins_username is defined and jenkins_password is defined

- name: Adding proxy server configuration to jenkins ssh servers
  jenkins_script:
    script: "{{ lookup('file', '/tmp/setup-proxy-server-dns-jenkins.groovy') }}"
    url: "{{ jenkins_url }}"
    user:  "{{ jenkins_username}}"
    password: "{{ jenkins_password }}"
  when: devops_cluster_dns is not defined