  - name: Including keystore configuration values from variable file.
    include_vars:
        file: ../configurations/configuration.yml
        name: keystore_file
  
  - name: Install java keytool ..this may take some time
    become: yes
    yum:
      name: java-1.7.0-openjdk
      state: present
  
  - name: Creates directory for keystore file
    file:
      path: /opt/keystore
      state: directory

  - name: Creating keystore for config server 
    shell: |
      keytool -genkeypair -alias {{ keystore_file.keystore_alias }} -keyalg RSA -keystore server.keystore -keypass {{ keystore_file.keystore_key_secret }} -storepass {{ keystore_file.keystore_store_password }} --dname 'CN={{ keystore_file.common_name }},OU={{ keystore_file.organizational_unit }},O={{ keystore_file.organization }},L={{ keystore_file.language }},S={{ keystore_file.state }},C={{ keystore_file.country }}'
    args:
      chdir: /opt/keystore
      creates: /opt/keystore/server.keystore
  
  - name: Base 64 encoding keystore file content using shell
    shell:  echo $(cat /opt/keystore/server.keystore | base64 --wrap=100000 )
    register: keystore_file_base_64_encoded

  - name: Keystore file content base 64 encoding
    set_fact:
      "keystore_content": "{{ keystore_file_base_64_encoded |  json_query('stdout') }}"

  - name: Printing base 64 encoded keystore content
    debug: msg="{{ keystore_content }}"

  - name: Keystore alias base 64 encoding
    set_fact:
      "keystore_alias": "{{ keystore_file.keystore_alias | b64encode }}"

  - name: Printing base 64 encoded keystore alias
    debug: msg="{{ keystore_alias }}"

  - name: Keystore key secret base 64 encoding
    set_fact:
      "keystore_key_secret": "{{ keystore_file.keystore_key_secret | b64encode }}"

  - name: Printing base 64 encoded keystore key secret
    debug: msg="{{ keystore_key_secret }}"

  - name: Keystore store password base 64 encoding
    set_fact:
      "keystore_store_password": "{{ keystore_file.keystore_store_password | b64encode }}"

  - name: Printing base 64 encoded keystore alias
    debug: msg="{{ keystore_store_password }}"

  - name: Git public key content base 64 encoding 
    set_fact:
      "git_public_key_content": "{{lookup('file', '~/.ssh/id_rsa.pub') | b64encode }}"

  - name: Git private key content base 64 encoding 
    set_fact:
      "git_private_key_content": "{{lookup('file', '~/.ssh/id_rsa') | b64encode }}"

  - name: Creating knownhost file
    file:
      path: /tmp/known_hosts
      state: touch
      
  - name: Adding git providers to known hosts
    shell: |
      # If you are using SCM providers other than github, gitlab and bitbucket, add them here
      ssh-keyscan -H  'github.com' >> /tmp/known_hosts
      ssh-keyscan -H  'gitlab.com' >> /tmp/known_hosts
      ssh-keyscan -H  'bitbucket.org' >> /tmp/known_hosts

  - name: Git known hosts content base 64 encoding 
    set_fact:
      "git_known_hosts_content": "{{lookup('file', '/tmp/known_hosts') | b64encode }}"

  - name: Removing known_hosts file
    become: yes
    shell: "rm -rf /tmp/known_hosts"

  - name: Printing base 64 encoded git private key content 
    debug: msg="{{ git_private_key_content }}"

  - name: Printing base 64 encoded git public key 
    debug: msg="{{ git_public_key_content }}"

  - name: Printing base 64 encoded git known hosts 
    debug: msg="{{ git_known_hosts_content }}"

  - name: Creating docker registry username colon password variable
    set_fact: 
      "docker_registry_username_colon_password": "{{ docker_registry_username }}:{{ docker_registry_password }}"

  - name: Creating base 64 encoded username and password value for docker registry
    set_fact:
      "username_password_base64_encoded": "{{docker_registry_username_colon_password | b64encode }}"

  - name: Creating template for private registry secret
    template:
      src: ../configurations/private-registry-secret.j2
      dest: /tmp/.dockercfg
      mode: u=rw,g=rw,o=rw

  - name: Creating base 64 encoded .dockercfg file
    set_fact:
      "dockercfg_content": "{{ lookup('file', '/tmp/.dockercfg') | b64encode }}"

  - name: Creating template for adding confgurations for as credential to jenkins servers
    template:
      src: ../configurations/setup-environment-variables-jenkins.j2
      dest: /tmp/setup-environment-variables-jenkins.groovy
      mode: u=rw,g=rw,o=rw

  - name: Adding configuration for as environment variable to jenkins servers
    jenkins_script:
      script: "{{ lookup('file', '/tmp/setup-environment-variables-jenkins.groovy') }}"
      url: "{{ hostvars['localhost']['devops_cluster_dns'] }}/jenkins"
      user:  "{{ hostvars['localhost']['jenkins_username'] }}"
      password: "{{ hostvars['localhost']['jenkins_password'] }}"
    when: devops_cluster_dns is defined

  - name: Adding configuration for as environment variable to jenkins servers
    jenkins_script:
      script: "{{ lookup('file', '/tmp/setup-environment-variables-jenkins.groovy') }}"
      url: "{{ jenkins_url }}"
      user:  "{{ jenkins_username }}"
      password: "{{ jenkins_password }}"
    when: devops_cluster_dns is not defined
    


    
