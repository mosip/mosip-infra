{{- $root := . -}}
{{- range $serviceName, $val := $root.Values.services }} 
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ $serviceName }}
spec:
  replicas: 1
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1 
  template:
    metadata:
      labels:
        app: {{ $serviceName }}
    spec:
      initContainers:
      - name: config-server-availability-check
        image: centos:centos7
        command: [ "sh", "-c"]
        args:
        - while [ $(curl -sw '%{http_code}' $spring_config_url_env/actuator/health -o /dev/null) -ne 200 ]; do
            echo "config server not up at address $spring_config_url_env sleeping for 15 secs" ;
            sleep 15;
          done;
        env:
         - name: spring_config_url_env
           value: {{ $root.Values.commons.configServer.url }}
      containers:
      - name: {{ $serviceName }}
        image: {{ $root.Values.commons.dockerRegistry.url }}/{{ .dockerImageName }}:{{ .dockerImageTag }}
        env:
        - name: active_profile_env
          value: {{ .activeProfile }}
        - name: spring_config_label_env
          value: {{ .configLabel }}
        - name: spring_config_url_env
          value: {{ $root.Values.commons.configServer.url }}
        ports:
        - containerPort: {{ .servicePort }}
        imagePullPolicy: Always
      imagePullSecrets:
      - name: {{ $root.Values.commons.dockerRegistry.pullSecret }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ $serviceName }}
spec:
  ports:
    - port: {{ .servicePort }}
  selector:
    app: {{ $serviceName }}
{{- end }}