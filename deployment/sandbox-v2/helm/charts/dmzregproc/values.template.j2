namespace: default
component: dmzregproc
part-of: mosip
activeProfileEnv: dmz 
springConfigLabel: master
configServerUrl: http://{{ clusters.mz.any_node_ip}}:{{ clusters.mz.ingress.nodeports.http}}/config  # Config server is on MZ
storageClass:  manual

probe:
  initialDelay: 30  # Seconds
  period: 30 # Seconds

ingress:
   namespace: default

artifactoryUrl: {{ artifactory_url }} 

domainName: {{ sandbox_domain_name }}
internalDomain: {{ clusters.dmz.nodeport_node }} 
isGlowroot: {{ is_glowroot }} 

landing:   # Landing folder where packets land
  pv:
    name: landing-pv
    size: 5Gi
  pvc:
    name: landing-pvc 
    size: 5Gi
  nfs:
    server: {{ regproc.nfs.server }}
    path:  {{ regproc.nfs.landing_folder }} 
  mountPath: /mnt/regproc/landing # Internal pod path

imagePullPolicy: Always 
services:
  receiver:
    serviceName: {{ versions.services.dmzregproc.receiver.keys()[0] }} 
    dockerImage: {{ versions.services.dmzregproc.receiver.values()[0] }}
    ports:
      eventbusPort: 5711
      hazelcastPort: 5701
      containerPort: 8081
      servicePort: 80
    ingressPath: /registrationprocessor/v1/packetreceiver/
    healthUrl: /registrationprocessor/v1/packetreceiver/actuator/health
  camel:
    serviceName: {{ versions.services.dmzregproc.camel.keys()[0] }} 
    dockerImage: {{ versions.services.dmzregproc.camel.values()[0] }}
    ports:
      eventbusPort: 5723
      hazelcastPort: 5701
      containerPort: 8022
      servicePort: 80
    ingressPath: '' 
    healthUrl: /registrationprocessor/v1/camelbridge/actuator/health
  status:
    serviceName: {{ versions.services.dmzregproc.status.keys()[0] }} 
    dockerImage: {{ versions.services.dmzregproc.status.values()[0] }}
    ports:
      containerPort: 8083
      servicePort: 80
    ingressPath: /registrationprocessor/v1/registrationstatus/
    healthUrl: /registrationprocessor/v1/registrationstatus/actuator/health
  pktserver:
    serviceName: {{ versions.services.dmzregproc.pktserver.keys()[0] }} 
    dockerImage: {{ versions.services.dmzregproc.pktserver.values()[0] }}
    pv:
      name: pktserver-pv
      size: 5Gi  # Same as landing above
    pvc:
      name: pktserver-pvc
      size: 5Gi  # Same as landing above
    nfs:
      server: console
      path:  /srv/nfs/mosip/landing/ #  Same as above
    ports:
      containerPort: 8082
      servicePort: 80
    ingressPath: ''  # NOTE: Seperate ingress for pktserver due to different rewrite rule.
    healthUrl: ''
      
