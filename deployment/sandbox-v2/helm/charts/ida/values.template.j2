namespace: default
component: ida
part-of: mosip
activeProfileEnv: mz 
springConfigLabel: master
configServerUrl: http://config-server/config
ingress:
   namespace: default
artifactoryUrl: {{ artifactory_url }} 
probe:
  initialDelay: 60  # Seconds
  period: 30 # Seconds
imagePullPolicy: Always
domainName: {{ sandbox_domain_name }}
internalDomain: {{ clusters.mz.nodeport_node }} 
isGlowroot: {{ is_glowroot }} 
services:
  auth:
    serviceName: {{ versions.services.ida.auth.keys()[0] }} 
    dockerImage: {{ versions.services.ida.auth.values()[0] }}
    containerPort: 8090
    servicePort: 80
    hsmUrl: tcp://softhsm-ida:80   # Should match with softhsm chart service name and port (see, ida.yml and role/softhsm)
    ingressPath: /idauthentication/v1/auth
    healthUrl: /idauthentication/v1/auth/actuator/health
  internal: 
    serviceName: {{ versions.services.ida.internal.keys()[0] }} 
    dockerImage: {{ versions.services.ida.internal.values()[0] }}
    containerPort: 8093
    servicePort: 80
    hsmUrl: tcp://softhsm-ida:80   
    ingressPath: /idauthentication/v1/internal
    healthUrl: /idauthentication/v1/internal/actuator/health
  kyc: 
    serviceName: {{ versions.services.ida.kyc.keys()[0] }} 
    dockerImage: {{ versions.services.ida.kyc.values()[0] }}
    containerPort: 8091
    servicePort: 80
    hsmUrl: tcp://softhsm-ida:80   
    ingressPath: /idauthentication/v1/kyc
    healthUrl: /idauthentication/v1/kyc/actuator/health
  otp: 
    serviceName: {{ versions.services.ida.otp.keys()[0] }} 
    dockerImage: {{ versions.services.ida.otp.values()[0] }}
    containerPort: 8092
    servicePort: 80
    hsmUrl: tcp://softhsm-ida:80   
    ingressPath: /idauthentication/v1/otp
    healthUrl: /idauthentication/v1/otp/actuator/health

generators:
  key:  
    name: {{ versions.services.ida.key.keys()[0] }} 
    dockerImage: {{ versions.services.ida.key.values()[0] }}
    hsmUrl: tcp://softhsm-ida:80   
  hashsalt:  
    name: {{ versions.services.ida.hashsalt.keys()[0] }} 
    dockerImage: {{ versions.services.ida.hashsalt.values()[0] }}
  encryptsalt:  
    name: {{ versions.services.ida.encryptsalt.keys()[0] }} 
    dockerImage: {{ versions.services.ida.encryptsalt.values()[0] }}
   
