apiVersion: v1
data:
  nginx.conf: |-
    worker_processes  1;
    
    events {
      worker_connections  1024;
    }
    
    http {
      access_log /var/log/nginx/access1.log;
      error_log /var/log/nginx/error1.log;
      server {
        listen {{ .Values.services.ui.ports.containerPort }};
        server_name  localhost;

        root   /usr/share/nginx/html;
        index  index.html index.htm;
        include /etc/nginx/mime.types;

        gzip on;
        gzip_min_length 1000;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        location /v1/esignet {
          proxy_pass         http://{{ .Values.services.ui.oidc_service_host }}/v1/esignet;
          proxy_redirect     off;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
        }
    
        location /.well-known/jwks.json {
          proxy_pass         http://{{ .Values.services.ui.oidc_service_host }}/v1/esignet/oauth/.well-known/jwks.json;
          proxy_redirect     off;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          types {
            text/plain log cer json txt;
          }
        }
    
        location /.well-known/openid-configuration {
          proxy_pass         http://{{ .Values.services.ui.oidc_service_host }}/v1/esignet/oidc/.well-known/openid-configuration;
          proxy_redirect     off;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          types {
            text/plain log cer json txt;
          }
        }

        location /oidc-ui {
          alias /usr/share/nginx/oidc-ui;
          try_files $uri $uri/ /oidc-ui/index.html;
        }
      }
    }
kind: ConfigMap
metadata:
  name: {{ .Values.services.ui.configName }}
  namespace: {{ .Release.Namespace }}
