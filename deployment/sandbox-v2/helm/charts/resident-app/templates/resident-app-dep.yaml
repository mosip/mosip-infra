apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.serviceName }} 
  namespace: {{ .Release.Namespace }} 
  labels:
    app: {{ .Values.serviceName }}
spec:
  replicas: {{ .Values.services.resident_app_server.podconfig.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.serviceName }} 
  minReadySeconds: {{ .Values.services.resident_app_server.podconfig.minReadySeconds }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.services.resident_app_server.podconfig.maxUnavailable }}
      maxSurge: {{ .Values.services.resident_app_server.podconfig.maxSurge }}
  template:
    metadata:
      labels:
        app: {{ .Values.serviceName }} 
        exportLogs: {{ .Values.exportLogs }}
    spec:
      containers:
      - name: {{ .Values.serviceName }} 
        image: {{ .Values.docker.image }} 
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:
          - name: active_profile_env
            value: {{ .Values.activeProfileEnv }}
          - name: spring_config_label_env
            value: {{ .Values.springConfigLabel }}
          - name: spring_config_url_env
            value: {{ .Values.configServerUrl }}
          - name: artifactory_url_env
            value: {{ .Values.artifactoryUrl }}
          - name: is_glowroot_env
            value: {{ .Values.isGlowroot }}
          - name: iam_adapter_url_env
            value: {{ .Values.iamAdapterUrl }}
        ports:
        - containerPort: {{ .Values.docker.ports.containerPort }}
        readinessProbe:
          httpGet:
            path: {{ .Values.services.resident_app_server.healthUrl }}
            port: {{ .Values.docker.ports.containerPort }}
          periodSeconds: {{ .Values.probe.period }}
          timeoutSeconds: {{ .Values.probe.timeout }}
          failureThreshold: {{ .Values.probe.failureThreshold }}
        livenessProbe:
          httpGet:
            path: {{ .Values.services.resident_app_server.healthUrl }}
            port: {{ .Values.docker.ports.containerPort }}
          periodSeconds: {{ .Values.probe.livenessPeriod }}
          timeoutSeconds: {{ .Values.probe.timeout }}
          failureThreshold: {{ .Values.probe.failureThreshold }}
        startupProbe:
          httpGet:
            path: {{ .Values.services.resident_app_server.healthUrl }}
            port: {{ .Values.docker.ports.containerPort }}
          failureThreshold: {{ .Values.probe.failureThreshold }}
          periodSeconds: {{ .Values.probe.startupPeriod }}
          timeoutSeconds: {{ .Values.probe.timeout }}
          initialDelaySeconds: {{ .Values.probe.initialDelaySeconds }}
        volumeMounts:
          - name: resident-app-server-volume
            mountPath: {{ .Values.services.resident_app_server.mountPath }}
      volumes:
        - name: resident-app-server-volume
          persistentVolumeClaim:
            claimName: {{ .Values.pvc.name }}