---
apiVersion: apps/v1
kind: Deployment 
metadata:
  name: {{  .Values.docker.service }}
  namespace: {{ .Release.Namespace }} 
spec:
  replicas: {{ .Values.services.artifactory.podconfig.replicas }} 
  selector:
    matchLabels:
      app: {{ .Values.docker.service }} 
  minReadySeconds: {{ .Values.services.artifactory.podconfig.minReadySeconds }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.services.artifactory.podconfig.maxUnavailable }}
      maxSurge: {{ .Values.services.artifactory.podconfig.maxSurge }}
  template:
    metadata:
      labels:
        app: {{ .Values.docker.service }} 
        exportLogs: {{ .Values.exportLogs }}
    spec:
      {{- include "dockerHubSecret" .  | indent 6}}
      containers:
      - name: {{  .Values.docker.service }}
        image: {{ .Values.docker.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
          - containerPort: { { .Values.services.artifactory.containerPort } }

        readinessProbe:
            tcpSocket:
              port: { { .Values.services.artifactory.containerPort } }
            periodSeconds: { { .Values.probe.period } }
            timeoutSeconds: { { .Values.probe.timeout } }
            failureThreshold: { { .Values.probe.failureThreshold } }
        livenessProbe:
            tcpSocket:
              port: { { .Values.services.artifactory.containerPort } }
            periodSeconds: { { .Values.probe.livenessPeriod } }
            timeoutSeconds: { { .Values.probe.timeout } }
            failureThreshold: { { .Values.probe.failureThreshold } }
        startupProbe:
            tcpSocket:
              port: { { .Values.services.artifactory.containerPort } }
            failureThreshold: { { .Values.probe.failureThreshold } }
            periodSeconds: { { .Values.probe.startupPeriod } }
            timeoutSeconds: { { .Values.probe.timeout } }
            initialDelaySeconds: { { .Values.probe.initialDelaySeconds } }

