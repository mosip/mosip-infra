component: regproc
part-of: mosip
activeProfileEnv: mz 
springConfigLabel: {{ config_repo.version }} 
configServerUrl: {{ config_server.internal_url }}
storageClass: dm-storage-class  # See sc, pv templates
exportLogs: enabled  # Let filebeat export the logs

sitePublicUrl: {{ site.sandbox_public_url }}

probe:
  period: 10 # Seconds
  timeout: 10
  livenessPeriod: 10
  failureThreshold: 15
  startupPeriod: 10
  initialDelaySeconds: 180

ingress:
   namespace: default

artifactoryUrl: {{ artifactory_url }} 
iamAdapterUrl: {{ iam_adapter_regproc_url }}

imagePullPolicy: Always 

isGlowroot: {{ is_glowroot }} 

dockerHub:
  private: {{ docker.hub.private }}  
  keyname: {{ docker.hub.keyname }}

services:
  camel:
    serviceName: {{ versions.services.regproc.camel.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.camel.values()[0] }}
    ports:
      eventbusPort: 5723
      hazelcastPort: 5701
      containerPort: 8022
      servicePort: 80
    ingressPath: /registrationprocessor/v1/abishandler/
    healthUrl: /registrationprocessor/v1/camelbridge/actuator/health
    podconfig:
      {{ podconfig.regproc.camel | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/camelbridge/actuator/prometheus

  notification:  # This is has a service front end for access (notification-svc.yaml)
    serviceName: {{ versions.services.regproc.notification.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.notification.values()[0] }}
    ports:
      eventbusPort: 5712
      hazelcastPort: 5701
      containerPort: 8090
      servicePort: 80 
    ingressPath: /registrationprocessor/v1/securezone/
    healthUrl: /registrationprocessor/v1/securezone/actuator/health
    podconfig:
      {{ podconfig.regproc.notification | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/securezone/actuator/prometheus

  reprocess:
    serviceName: {{ versions.services.regproc.reprocess.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.reprocess.values()[0] }}
    ports:
      eventbusPort: 5750
      hazelcastPort: 5701
      containerPort: 8021
      servicePort: 80
    ingressPath: /registrationprocessor/v1/reprocessor/
    healthUrl: /registrationprocessor/v1/reprocessor/actuator/health
    podconfig:
      {{ podconfig.regproc.reprocess | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/reprocessor/actuator/prometheus

  uploader:
    serviceName: {{ versions.services.regproc.uploader.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.uploader.values()[0] }}
    ports:
      eventbusPort: 5714
      hazelcastPort: 5701
      containerPort: 8087
      servicePort: 80
    ingressPath: /registrationprocessor/v1/uploader/
    healthUrl: /registrationprocessor/v1/uploader/actuator/health
    podconfig:
      {{ podconfig.regproc.uploader | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/uploader/actuator/prometheus

  quality:
    serviceName: {{ versions.services.regproc.quality.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.quality.values()[0] }}
    ports:
      eventbusPort: 5727
      hazelcastPort: 5701
      containerPort: 9072
      servicePort: 80
    ingressPath: /registrationprocessor/v1/qualitychecker/
    healthUrl: /registrationprocessor/v1/qualitychecker/actuator/health
    podconfig:
      {{ podconfig.regproc.quality | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/qualitychecker/actuator/prometheus

  validator:
    serviceName: {{ versions.services.regproc.validator.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.validator.values()[0] }}
    ports:
      eventbusPort: 5715
      hazelcastPort: 5701
      containerPort: 8088
      servicePort: 80
    ingressPath: /registrationprocessor/v1/packetvalidator/
    healthUrl: /registrationprocessor/v1/packetvalidator/actuator/health
    podconfig:
      {{ podconfig.regproc.validator | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/packetvalidator/actuator/prometheus

  osi:
    serviceName: {{ versions.services.regproc.osi.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.osi.values()[0] }}
    ports:
      eventbusPort: 5716
      hazelcastPort: 5701
      containerPort: 8089
      servicePort: 80
    ingressPath: /registrationprocessor/v1/osivalidator/
    healthUrl: /registrationprocessor/v1/osivalidator/actuator/health
    podconfig:
      {{ podconfig.regproc.osi | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/osivalidator/actuator/prometheus

  demo:
    serviceName: {{ versions.services.regproc.demo.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.demo.values()[0] }}
    ports:
      eventbusPort: 5717
      hazelcastPort: 5701
      containerPort: 8091
      servicePort: 80
    ingressPath: /registrationprocessor/v1/demodedupe/
    healthUrl: /registrationprocessor/v1/demodedupe/actuator/health
    podconfig:
      {{ podconfig.regproc.demo | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/demodedupe/actuator/prometheus

  bio:
    serviceName: {{ versions.services.regproc.bio.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.bio.values()[0] }}
    ports:
      eventbusPort: 5718
      hazelcastPort: 5701
      containerPort: 9096
      servicePort: 80
    ingressPath: /registrationprocessor/v1/biodedupe/
    healthUrl: /registrationprocessor/v1/biodedupe/actuator/health
    podconfig:
      {{ podconfig.regproc.bio | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/biodedupe/actuator/prometheus

  bioauth:
    serviceName: {{ versions.services.regproc.bioauth.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.bioauth.values()[0] }}
    ports:
      eventbusPort: 5777
      hazelcastPort: 5701
      containerPort: 8020
      servicePort: 80
    ingressPath: /registrationprocessor/v1/bioauth/
    healthUrl: /registrationprocessor/v1/bioauth/actuator/health
    podconfig:
      {{ podconfig.regproc.bioauth | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/bioauth/actuator/prometheus

  abishandler:
    serviceName: {{ versions.services.regproc.abishandler.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.abishandler.values()[0] }}
    ports:
      eventbusPort: 5726
      hazelcastPort: 5701
      containerPort: 9071
      servicePort: 80
    ingressPath: /registrationprocessor/v1/abishandler/
    healthUrl: /registrationprocessor/v1/abishandler/actuator/health
    podconfig:
      {{ podconfig.regproc.abishandler | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/abishandler/actuator/prometheus

  abismid:
    serviceName: {{ versions.services.regproc.abismid.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.abismid.values()[0] }}
    ports:
      eventbusPort: 5888
      hazelcastPort: 5701
      containerPort: 8091
      servicePort: 80
    ingressPath: /registrationprocessor/v1/abismiddleware/
    healthUrl: /registrationprocessor/v1/abismiddleware/actuator/health
    podconfig:
      {{ podconfig.regproc.abismid | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/abismiddleware/actuator/prometheus

  manual:
    serviceName: {{ versions.services.regproc.manual.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.manual.values()[0] }}
    ports:
      eventbusPort: 5720
      hazelcastPort: 5701
      containerPort: 8084
      servicePort: 80
    ingressPath: /registrationprocessor/v1/manualverification/
    healthUrl: /registrationprocessor/v1/manualverification/actuator/health
    podconfig:
      {{ podconfig.regproc.manual | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/manualverification/actuator/prometheus

  external:
    serviceName: {{ versions.services.regproc.external.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.external.values()[0] }}
    ports:
      eventbusPort: 5736
      hazelcastPort: 5701
      containerPort: 8095
      servicePort: 80
    ingressPath: /registrationprocessor/v1/external/
    healthUrl: /registrationprocessor/v1/external/actuator/health 
    podconfig:
      {{ podconfig.regproc.external | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/external/actuator/prometheus

  eis: 
    serviceName: {{ versions.services.regproc.eis.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.eis.values()[0] }}
    ports:
      containerPort: 8201
      servicePort: 80
    ingressPath: /registrationprocessor/v1/eis
    healthUrl: /registrationprocessor/v1/eis/actuator/health
    podconfig:
      {{ podconfig.regproc.eis | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/eis/actuator/prometheus

  uin:
    serviceName: {{ versions.services.regproc.uin.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.uin.values()[0] }}
    ports:
      eventbusPort: 5719
      hazelcastPort: 5701
      containerPort: 8099
      servicePort: 80
    ingressPath: /registrationprocessor/v1/uin-generator/
    healthUrl: /registrationprocessor/v1/uin-generator/actuator/health
    podconfig:
      {{ podconfig.regproc.uin | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/uin-generator/actuator/prometheus

  msg:
    serviceName: {{ versions.services.regproc.msg.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.msg.values()[0] }}
    ports:
      eventbusPort: 5721
      hazelcastPort: 5701
      containerPort: 8088
      servicePort: 80
    ingressPath: /registrationprocessor/v1/sender-stage/
    healthUrl: /registrationprocessor/v1/sender-stage/actuator/health
    podconfig:
      {{ podconfig.regproc.msg | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/sender-stage/actuator/prometheus

  print:
    serviceName: {{ versions.services.regproc.print.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.print.values()[0] }}
    ports:
      eventbusPort: 5722
      hazelcastPort: 5701
      containerPort: 8099
      servicePort: 80
    ingressPath: /registrationprocessor/v1/print-stage/
    healthUrl: /registrationprocessor/v1/print-stage/actuator/health
    podconfig:
      {{ podconfig.regproc.print | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/print-stage/actuator/prometheus

  trans:
    serviceName: {{ versions.services.regproc.trans.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.trans.values()[0] }}
    ports:
      containerPort: 8110
      servicePort: 80
    ingressPath: /registrationprocessor/v1/registrationtransaction/
    healthUrl: /registrationprocessor/v1/registrationtransaction/actuator/health
    podconfig:
      {{ podconfig.regproc.trans | to_nice_yaml(indent=6) | indent(6) }}
    annotation: /registrationprocessor/v1/registrationtransaction/actuator/prometheus
