# Ansible
# ansible_user: root

cluster_name: 'mzcluster'  # Same as in hosts.ini
cluster_master: 'mzmaster' # Same as in hosts.ini
kubemaster_ip: "{{ hostvars[groups[cluster_master][0]]['ansible_default_ipv4'].address | default(groups[cluster_master][0]) }}"

# Kubernetes
kube_version: v1.18.0
token: b0f7b8.8d1767876297d85c

# 1.8.x feature: --feature-gates SelfHosting=true
init_opts: ""

# Any other additional opts you want to add..
kubeadm_opts: ""
# For example:
# kubeadm_opts: '--apiserver-cert-extra-sans "k8s.domain.com,kubernetes.domain.com"'

service_cidr: "10.96.0.0/12"
pod_network_cidr: "10.244.0.0/16"

# Network implementation('flannel', 'calico', 'canal')
network: flannel

# Change this to an appropriate interface, preferably a private network.
# For example, on DigitalOcean, you would use eth1 as that is the default private network interface.
network_interface: ""

enable_dashboard: yes

# A list of insecure registries you might need to define
# insecure_registries: []
insecure_registries: ['gcr.io']

systemd_dir: /lib/systemd/system
system_env_dir: /etc/sysconfig
network_dir: /etc/kubernetes/network
kubeadmin_config: /etc/kubernetes/admin.conf
# The above config file is transferred to the console machine at below location
console_kubeadmin_config_path: '{{clusters.mz.kube_config}}' 
kube_addon_dir: /etc/kubernetes/addon

# Additional feature to install
additional_features:
  metallb: false  # For sandbox installation we don't need metallb, we can use Ingress in nodeport mode
  healthcheck: true

# temporary directory used by additional features
tmp_dir: /tmp/kubeadm-ansible-files

