# ---------DB connection---------------
javax.persistence.jdbc.driver=org.postgresql.Driver
mosip.database.ip=postgres
mosip.database.port=80
javax.persistence.jdbc.url=jdbc:postgresql://${mosip.database.ip}:${mosip.database.port}/mosip_prereg?useSSL=false
javax.persistence.jdbc.user=prereguser
javax.persistence.jdbc.password=Mosip@dev123

#Hibernate
hibernate.hbm2ddl.auto=none
hibernate.show_sql=false
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
hibernate.jdbc.lob.non_contextual_creation=true

#Hickari logs
logging.level.com.zaxxer.hikari=DEBUG

#Project Version
version=1.0

application.id=pre-registration
preregistration.preid.regex=[0-9]+
#Age to be an adult
mosip.adult.age=5

#idschema version
mosip.idschema.version=0.1


# Demographic service
demographic.service.version=v1
demographic.service.env=http://prereg-demographic-service
demographic.service.contextpath=preregistration/${demographic.service.version}
demographic.resource.url=${demographic.service.env}/${demographic.service.contextpath}
mosip.preregistration.demographic.create.id=mosip.pre-registration.demographic.create
mosip.preregistration.demographic.update.id=mosip.pre-registration.demographic.update
mosip.preregistration.demographic.update.status.id=mosip.pre-registration.demographic.status.update
mosip.preregistration.demographic.retrieve.basic.id=mosip.pre-registration.demographic.retrieve.basic
mosip.preregistration.demographic.retrieve.details.id=mosip.pre-registration.demographic.retrieve.details
mosip.preregistration.demographic.retrieve.status.id=mosip.pre-registration.demographic.retrieve.status
mosip.preregistration.demographic.retrieve.date.id=mosip.pre-registration.demographic.retrieve.date
mosip.preregistration.demographic.delete.id=mosip.pre-registration.demographic.delete
mosip.pregistration.pagesize=20

# Document service
document.service.version=v1
document.service.env=http://prereg-document-service
document.service.contextpath=preregistration/${document.service.version}
document.resource.url=${document.service.env}/${document.service.contextpath}

#Booking service 
booking.service.version=v1
booking.service.env=http://prereg-booking-service
booking.service.contextpath=preregistration/${booking.service.version}
booking.resource.url=${booking.service.env}/${booking.service.contextpath}
appointmentResourse.url=${booking.resource.url}

# Batch job
batch.service.version=v1
batch.service.env=http://prereg-batchjob-service
batch.service.contextpath=preregistration/${batch.service.version}/batch
batch.resource.url=${batch.service.env}/${batch.service.contextpath}

#Notification service
notification.service.version=v1
notification.service.env=http://prereg-notification-service
notification.service.contextpath=preregistration/${notification.service.version}

# Masterdata service
masterdata.service.version=v1
masterdata.service.env=http://kernel-masterdata-service
masterdata.service.contextpath=masterdata
masterdata.resource.url=${masterdata.service.env}/${masterdata.service.version}/${masterdata.service.contextpath}
regCenter.url=${masterdata.resource.url}/registrationcenters
holiday.url=${masterdata.resource.url}/getregistrationcenterholidays/
holiday.exceptional.url=${masterdata.resource.url}/exceptionalholidays
working.day.url=${masterdata.resource.url}/workingdays

# Email service
email.service.env=http://kernel-notification-service
email.service.contextpath=notifier

# SMS service
sms.service.env=http://kernel-notification-service
sms.service.contextpath=notifier


# Audit service
audit.service.env=http://kernel-auditmanager-service
audit.service.contextpath=auditmanager

# Crypto service
crypto.service.env=http://kernel-keymanager-service
crypto.service.contextpath=keymanager

# Auth service
kernel.auth.env=http://kernel-auth-service
kernel.auth.contextpath=authmanager

# PRID service
kernel.prid.env=http://kernel-pridgenerator-service
kernel.prid.contextpath=pridgenerator

kernel.syncdata.env=http://kernel-syncdata-service
kernel.syncdata.version=v1/syncdata
latestidschema.service.contextpath=latestidschema
mosip.preregistration.id-schema=${kernel.syncdata.env}/${kernel.syncdata.version}/${latestidschema.service.contextpath}

# OTP
sendOtp.resource.url=${kernel.auth.env}/${masterdata.service.version}/${kernel.auth.contextpath}
otpChannel.mobile=mobile
otpChannel.email=email
userIdType=USERID
appId=prereg
mosip.preregistration.sendotp.id=mosip.pre-registration.login.sendotp
mosip.preregistration.validateotp.id=mosip.pre-registration.login.useridotp
mosip.preregistration.invalidatetoken.id=mosip.pre-registration.login.invalidate
mosip.preregistration.config.id=mosip.pre-registration.login.config
mosip.preregistration.login.service.version=1.0
validationStatus=success
context=auth-otp

# Both below fields must match with what is there on Keycloak
clientId=mosip-prereg-client
secretKey=abc123

auth.server.validate.url=http://kernel-auth-service/v1/authmanager/authorize/admin/validateToken

mosip.kernel.idobjectvalidator.masterdata.documentcategories.lang.rest.uri=${masterdata.resource.url}/documentcategories/{langcode}
mosip.kernel.idobjectvalidator.masterdata.languages.rest.uri=${masterdata.resource.url}/languages
mosip.kernel.idobjectvalidator.masterdata.gendertypes.rest.uri=${masterdata.resource.url}/gendertypes
mosip.kernel.idobjectvalidator.masterdata.documentcategories.rest.uri=${masterdata.resource.url}/documentcategories
mosip.kernel.idobjectvalidator.masterdata.documenttypes.rest.uri=${masterdata.resource.url}/documenttypes/{documentcategorycode}/{langcode}
mosip.kernel.idobjectvalidator.masterdata.locations.rest.uri=${masterdata.resource.url}/locations/{langcode}
mosip.kernel.idobjectvalidator.masterdata.locationhierarchy.rest.uri=${masterdata.resource.url}/locations/locationhierarchy/{hierarchyname} 
mosip.kernel.idobjectvalidator.masterdata.documentcategories.lang.rest.uri=${masterdata.resource.url}/documentcategories/{langcode}
mosip.kernel.idobjectvalidator.referenceValidator=io.mosip.kernel.idobjectvalidator.impl.IdObjectReferenceValidator
preregistartion.config.identityjson=pre-registration-identity-mapping.json
#Prid 
mosip.io.prid.url=${kernel.prid.env}/${masterdata.service.version}/${kernel.prid.contextpath}/prid

mosip.kernel.masterdata.validdoc.rest.uri=${masterdata.resource.url}/validdocuments/{langcode}

# Document 
# Maximum size of file allowed uploaded in document service api (in mb)
spring.servlet.multipart.max-file-size=-1
spring.servlet.multipart.max-request-size=-1
max.file.size=2
preregistration.document.extention=PDF,JPEG,PNG,JPG
mosip.preregistration.document.upload.id=mosip.pre-registration.document.upload
mosip.preregistration.document.copy.id=mosip.pre-registration.document.copy
mosip.preregistration.document.fetch.metadata.id=mosip.pre-registration.document.fetch.metadata
mosip.preregistration.document.fetch.content.id=mosip.pre-registration.document.fetch.content
mosip.preregistration.document.delete.id=mosip.pre-registration.document.delete
mosip.preregistration.document.delete.specific.id=mosip.pre-registration.document.delete.specific
#Enable or disable the virus scanner
mosip.preregistration.document.scan=true

# HDFS
mosip.kernel.fsadapter.hdfs.user-name=prereg

# Booking

# Number of days of availability to be synced from Master Data to Pre-regsistration system
preregistration.availability.sync=37
preregistration.availability.noOfDays=140
# Number of days in between the date of booking and the first appointment date to be shown
preregistration.booking.offset=2
# Number of hours before an appointment date the individual can rebook an appointment
preregistration.timespan.rebook=24
# Number of hours before an appointment date the individual can cancel an appointment 
preregistration.timespan.cancel=24

# For cancel and re-book
preregistration.country.specific.zoneId=GMT+05:30

notification.url=${notification.service.env}/${notification.service.version}/${notification.service.contextpath}/notification

mosip.preregistration.booking.availability.sync.id=mosip.pre-registration.appointment.availability.sync
mosip.preregistration.booking.book.id=mosip.pre-registration.booking.book
mosip.preregistration.booking.fetch.booking.id=mosip.pre-registration.appointment.fetch
mosip.preregistration.booking.cancel.id=mosip.pre-registration.appointment.cancel
mosip.preregistration.booking.delete.id=mosip.preregistration.booking.delete
mosip.preregistration.booking.fetch.availability.id=mosip.pre-registration.appointment.availability
mosip.preregistration.booking.fetchPreidByDate.id=mosip.pre-registration.appointment.ids
mosip.preregistration.booking.availability.increase.id=mosip.preregistration.booking.availability.increase
mosip.preregistration.booking.availability.check.id=mosip.preregistration.booking.availability.check
mosip.preregistration.booking.delete.old.id=mosip.preregistration.booking.delete.old
mosip.preregistration.booking.exception.id=mosip.preregistration.booking.parse.exception

# ----------- BatchJob--------
mosip.batch.token.authmanager.appId=prereg
mosip.batch.token.authmanager.userName=mosip-prereg-client
mosip.batch.token.authmanager.password=abc123
mosip.batch.token.authmanager.url=${kernel.auth.env}/${masterdata.service.version}/${kernel.auth.contextpath}/authenticate/clientidsecretkey
mosip.batch.token.request.id=

# Determines the Time of the day, batch job should be intiated
preregistration.job.schedule.cron.consumedStatusJob=0 0 0 * * ?
preregistration.job.schedule.cron.slotavailability=0 0 0 * * ?
preregistration.job.schedule.cron.expiredStatusJob=0 0 0 * * ?

#Schema name for batch job table
spring.batch.tablePrefix=PREREG.BATCH_

#Booking service URL for creating time slots
bookingAvailablity.url=${booking.resource.url}/appointment/availability/sync

#BatchJob-service URL for updating the consumed status
updateConsumedStatus.url=${batch.resource.url}/consumedStatus

#BatchJob-service URL for updating to expiredStatus
expiredStatus.url=${batch.resource.url}/expiredStatus

batch.appointment.cancel=${batch.service.env}/preregistration/v1

# ----------- BatchJob-Service--------
# Determines request & response id of batchjob-service
mosip.preregistration.batchjob.service.consumed.id=mosip.pre-registration.batchjob.service.consumed
mosip.preregistration.batchjob.service.expired.id=mosip.pre-registration.batchjob.service.expired

# ------------- core ----------------

#Kernel Service URL for Encryption and decryption 
cryptoResource.url=${crypto.service.env}/${masterdata.service.version}/${crypto.service.contextpath}

#Kernel service URL for Audit logging
audit.url=${audit.service.env}/${masterdata.service.version}/${audit.service.contextpath}/audits

#Kernel service URL for fetching templates
resource.template.url=${masterdata.resource.url}/templates

#Kernel service URL for sending emails
emailResourse.url=${email.service.env}/${masterdata.service.version}/${email.service.contextpath}/email/send

#Kernel service URL for sending sms 
smsResourse.url=${sms.service.env}/${masterdata.service.version}/${sms.service.contextpath}/sms/send

#-------Notification-----------
# Email template
email.acknowledgement.template=Email-Acknowledgement

# Email template subject
email.acknowledgement.subject.template=Acknowledgement-email-subject

# sms template
sms.acknowledgement.template=SMS-Acknowledgement

# Global config file name
global.config.file=application-${spring.profiles.active}.properties

#Pre-reg config file name
pre.reg.config.file=pre-registration-${spring.profiles.active}.properties

mosip.pre-registration.notification.id=mosip.pre-registration.notification.notify

cancel.appoinment.template=cancel-appointment

preregistartion.response = response
preregistartion.identity.fullName=fullName
preregistartion.demographicDetails=demographicDetails
preregistartion.identity.email=email
preregistartion.identity.phone=phone
preregistartion.identity=identity 

#--------QRCode------------
mosip.pre-registration.qrcode.generate.id=mosip.pre-registration.qrcode.generate
mosip.pre-registration.qrcode.service.version=1.0
qrversion=V1

#--------Data-sync----------
#id for retrieve all pre-registration ids API
mosip.id.preregistration.datasync.fetch.ids=mosip.pre-registration.datasync.fetch.ids
#id for storing cosumed pre-registration ids API
mosip.id.preregistration.datasync.store=mosip.pre-registration.datasync.store
#id for get preregistration id API
mosip.id.preregistration.datasync.fetch=mosip.pre-registration.datasync.fetch
#config parameter to define proof of address
poa.url=proofOfAddress
#config parameter to define proof of identity
poi.url=proofOfIdentity
#config parameter to define proof of birth
pod.url=proofOfDateOfBirth
#config parameter to define proof of relationship
por.url=proofOfRelationship

#-------------------transliteration---------------

# Determines request & response id of transliteration-service
mosip.pre-registration.transliteration.transliterate.id=mosip.pre-registration.transliteration.transliterate

#--------UI params---------
# List of keys which UI will consume
ui.config.params=preregistration.availability.sync,preregistration.availability.noOfDays,mosip.supported-languages,mosip.primary-language,mosip.secondary-language,mosip.id.validation.identity.email,mosip.id.validation.identity.postalCode,mosip.id.validation.identity.phone,mosip.id.validation.identity.dateOfBirth,mosip.id.validation.identity.referenceIdentityNumber,mosip.default.dob.month,mosip.default.dob.day,mosip.kernel.otp.expiry-time,mosip.kernel.otp.validation-attempt-threshold,mosip.kernel.otp.default-length,mosip.kernel.sms.number.length,mosip.kernel.pin.length,preregistration.max.file.size,preregistration.recommended.centers.locCode,preregistration.nearby.centers,mosip.login.mode,preregistration.workflow.demographic,preregistration.workflow.documentupload,preregistration.workflow.booking,preregistration.auto.logout,preregistration.timespan.cancel,preregistration.timespan.rebook,preregistration.booking.offset,mosip.right_to_left_orientation,mosip.left_to_right_orientation,mosip.id.validation.identity.age,mosip.id.validation.identity.fullName.[*].value,mosip.id.validation.identity.addressLine1.[*].value,preregistration.documentupload.allowed.file.type,preregistration.documentupload.allowed.file.nameLength,preregistration.documentupload.allowed.file.size,mosip.preregistration.auto.logout.idle,mosip.preregistration.auto.logout.timeout,mosip.preregistration.auto.logout.ping,mosip.country.code,mosip.notificationtype,mosip.kernel.idobjectvalidator.masterdata.locations.locationNotAvailable,google.recaptcha.site.key,mosip.adult.age,mosip.idschema.version
# This config is used for loading recommended centers based on the value of the config. The value depicts the location hierarchy code of the hierarchy based on which the recommended centers is loaded
preregistration.recommended.centers.locCode=5

# The Registration centers will be searched based on the distance value from the Geo location identified
preregistration.nearby.centers=2000

# Determines file upload type allowed in UI
preregistration.documentupload.allowed.file.type = application/pdf,image/jpeg,image/png,image/jpg

# Determines the file name length(with extension) allowed in UI
preregistration.documentupload.allowed.file.nameLength = 50

# Determines maximum size of file allowed uploaded in document service api (in bytes)
preregistration.documentupload.allowed.file.size = 2000000


# Determines idle condition(in seconds)
mosip.preregistration.auto.logout.idle=180

# Determines  pop up timer(in seconds)
mosip.preregistration.auto.logout.timeout=60

# Determines  to maintain iternal cycle & make sure value is not null (any value greater than zero)
mosip.preregistration.auto.logout.ping=30

# UI Modularity config files(Not used yet)
# Determines which stages of Pre-Registration can be switched off and switched on
preregistration.workflow.demographic=true/false
preregistration.workflow.documentupload=true/false
preregistration.workflow.booking=true/false 

mosip.preregistration.login.id.sendotp=mosip.pre-registration.login.sendotp
mosip.preregistration.login.id.validateotp=mosip.pre-registration.login.useridotp
mosip.preregistration.login.id.invalidatetoken=mosip.pre-registration.login.invalidate
mosip.preregistration.login.id.config=mosip.pre-registration.login.config

mosip.preregistration.booking.id.book=mosip.pre-registration.booking.book

mosip.preregistration.demographic.id.create=mosip.pre-registration.demographic.create
mosip.preregistration.demographic.id.update=mosip.pre-registration.demographic.update
mosip.preregistration.demographic.id.retrieve.date=mosip.pre-registration.demographic.retrieve.date

mosip.pre-registration.notification.id.send=mosip.pre-registration.notification.notify
mosip.pre-registration.qrcode.id.generate=mosip.pre-registration.qrcode.generate
mosip.preregistration.document.id.upload=mosip.pre-registration.document.upload

#-------------------captcha---------------
google.recaptcha.site.key={{ site.captcha.google_recaptcha_site_key }}  
google.recaptcha.verify.url=https://www.google.com/recaptcha/api/siteverify
google.recaptcha.secret.key={{ site.captcha.google_recaptcha_secret_key }}
mosip.preregistration.captcha.id.validate = mosip.pre-registration.captcha.id.validate

#Id-scheme-json-file
preregistration.demographic.idschema-json-filename=pre-registration-demographic.json

mosip.preregistration.id-schema=http://kernel-syncdata-service/v1/syncdata/latestidschema
