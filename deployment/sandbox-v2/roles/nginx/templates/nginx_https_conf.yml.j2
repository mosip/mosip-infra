# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   120;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    disable_symlinks off; 

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    #include /etc/nginx/conf.d/*.conf;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

# Settings for a TLS enabled server.

    server {
        listen       443 ssl http2 default_server;
        listen       [::]:443 ssl http2 default_server;
        server_name  _;
        root         /usr/share/nginx/html;

        proxy_buffers 8 16k;
        proxy_buffer_size 32k;  # This is needed to as responses may be huge
        client_max_body_size 8m; # Biometrics may there in the request.
        ssl_certificate {{ ssl_certificate }};
        ssl_certificate_key {{ ssl_certificate_key }};
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;


        proxy_set_header Host $host;  
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
           proxy_cookie_path / "/; SameSite=None; HTTPOnly; Secure";
        }

        location /keycloak/ {
          proxy_cookie_path /keycloak/auth/realms/mosip/ "/; HTTPOnly; Secure";
          proxy_pass {{clusters.mz.ingress.base_url}}/keycloak/;
        }

        location /config/ {
          proxy_pass {{clusters.mz.ingress.base_url}}/config/;
        }

        location /preregistration/v1/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/preregistration/v1/;
        }
        location /pre-registration-ui/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/pre-registration-ui/;
        }
   
        location /v1/masterdata/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/masterdata/;
        }

        location /v1/keymanager/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/keymanager/;
        }

        location /v1/syncdata/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/syncdata/;
        }

        location /v1/idgenerator/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/idgenerator/;
        }

        location /v1/ridgenerator/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/ridgenerator/;
        }

        location /v1/pridgenerator/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/pridgenerator/;
        }

        location /v1/otpmanager/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/otpmanager/;
        }

        location /v1/notifier/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/notifier/;
        }
   
        location /v1/authmanager/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/authmanager/;
        }

        location /v1/auditmanager/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/auditmanager/;
        }

        location /idauthentication/v1/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/idauthentication/v1/;
        }

        location /idauthentication/v1/otp/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/idauthentication/v1/otp/;
        }

        location /idauthentication/v1/internal/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/idauthentication/v1/internal/;
        }

        location /idauthentication1/v1/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/idauthentication1/v1/;
        }

        location /idauthentication1/v1/otp/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/idauthentication1/v1/otp/;
        }

        location /idauthentication1/v1/internal/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/idauthentication1/v1/internal/;
        }


        location /idrepository/v1/identity/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/idrepository/v1/identity/;
        }

        # Note the below is for VID access.        
        location /idrepository/v1/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/idrepository/v1/;                                                                         
         }


        location /registrationprocessor/v1/registrationstatus/ {
           proxy_pass {{clusters.dmz.ingress.base_url}}/registrationprocessor/v1/registrationstatus/;
        }

        location /registrationprocessor/v1/packetreceiver/ {
           proxy_pass {{clusters.dmz.ingress.base_url}}/registrationprocessor/v1/packetreceiver/;
        }

        location /registrationprocessor/v1/securezone/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/registrationprocessor/v1/securezone/;
        }

        location /registrationprocessor/v1/reprocessor/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/registrationprocessor/v1/reprocessor/;
        }

        location /registrationprocessor/v1/manualverification/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/registrationprocessor/v1/manualverification/;
        }

        location /registrationprocessor/v1/requesthandler/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/registrationprocessor/v1/requesthandler/;
        }

        location /registrationprocessor/v1/registrationtransaction/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/registrationprocessor/v1/registrationtransaction/;
        }

        location /registrationprocessor/v1/print/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/registrationprocessor/v1/print/;
        }

        location /registrationprocessor/v1/bio-dedupe/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/registrationprocessor/v1/bio-dedupe/;
        }

        location /registrationprocessor/v1/workflowmanager/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/registrationprocessor/v1/workflowmanager/;
        }

        location /registrationprocessor/v1/notification/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/registrationprocessor/v1/notification/;
        }

        location /partnermanagement/v1/misps/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/partnermanagement/v1/misps/;
        }

        location /partnermanagement/v1/policies/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/partnermanagement/v1/policies/;
        }

        location /partnermanagement/v1/partners/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/partnermanagement/v1/partners/;
        }

        location /partnermanagement/v1/pmpartners/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/partnermanagement/v1/pmpartners/;
        }

        location /pmp-ui/ {
          proxy_pass {{clusters.mz.ingress.base_url}}/pmp-ui/;
        }

        location /v1/policymanager/ {
          proxy_pass {{clusters.mz.ingress.base_url}}/v1/policymanager/;
        }

        location /v1/partnermanager/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/partnermanager/;
        }

        location /mz-dashboard/ { # note: https needed here
           proxy_pass https://{{clusters.mz.nodeport_node}}:{{clusters.mz.dashboard.nodeport}}/;
        }

        location /dmz-dashboard/ { # note: https needed here
           proxy_pass https://{{clusters.dmz.nodeport_node}}:{{clusters.dmz.dashboard.nodeport}}/;
        }

        location /{{clusters.mz.monitoring.grafana_ingress_path}}/ {
           proxy_pass  {{clusters.mz.ingress.base_url}}/{{clusters.mz.monitoring.grafana_ingress_path}}/;
        }

        location /{{clusters.dmz.monitoring.grafana_ingress_path}}/ {
           proxy_pass  {{clusters.dmz.ingress.base_url}}/{{clusters.dmz.monitoring.grafana_ingress_path}}/;
        }

        location /kibana/ {
           proxy_pass  {{clusters.mz.ingress.base_url}}/kibana/;
        }

        location /v1/admin/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/admin/;
        }

        location /admin-ui/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/admin-ui/;
        }

        location /admin-ui/templates/ {
           proxy_pass http://mzworker0.sb:30080/admin-ui/templates/;
           if ( $request_filename ~ "^.*/(.+\.(csv))$" ) {
               set $fname $1;
               add_header Content-Disposition "attachment; filename=$fname";
           }
        }

        location /resident/v1/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/resident/v1/;
        }

        location /residentmobileapp/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/mimoto/;
        }

        location /registration-client/ {
           proxy_pass {{clusters.dmz.ingress.base_url}}/registration-client/;
        }

        location /.well-known/ {
           if ($request_method = 'OPTIONS') {
             add_header 'Access-Control-Allow-Origin' '*';
             add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
             add_header 'Access-Control-Allow-Headers' 'Content-Type';
             add_header 'Content-Type' 'application/json';
             return 204;
            }
           autoindex  on;
           add_header Access-Control-Allow-Origin *;
           add_header Access-Control-Allow-Methods "GET, OPTIONS";
           proxy_pass http://dmzworker0.sb:30080/.well-known/;
        }

        location = /mobileapp/ {
           proxy_pass http://dmzworker0.sb:30080/files/mobileapp/;
           if ( $request_filename ~ "^.*/(.+\.(apk|zip))$" ) {
               set $fname $1;
               add_header Content-Disposition "attachment; filename=$fname";
           }
        }

        location /activemq/admin/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/activemq/admin/;
        }

        location /commons/v1/packetmanager/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/commons/v1/packetmanager/;
        }

        location /minio/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/minio/;
        }

        location /v1/bioextractor/mock/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/bioextractor/mock/;
        }

        location /v1/credentialrequest/{
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/credentialrequest/;
        }

        location /v1/credentialservice/{
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/credentialservice/;
        }

        location /v1/datashare/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/datashare/;
        }

        location /biosdk-service/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/biosdk-service/;
        }

        location /v1/print/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/print/;
        }

        location /hub/ {
           proxy_pass {{clusters.dmz.ingress.base_url}}/hub/;
         }

        location /v1/mock-abis-service/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/mock-abis-service/;
        }

        location /v1/hotlist/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/v1/hotlist/;
        }

        location /tusd/files/ {
           proxy_pass http://dmzworker0.sb:30080/files/;
        # Disable request and response buffering
          proxy_request_buffering  off;
          proxy_buffering          off;

        # Add X-Forwarded-* headers
          proxy_set_header X-Forwarded-Host $host;
          proxy_set_header X-Forwarded-Proto $scheme;

          proxy_set_header         Upgrade $http_upgrade;
          proxy_set_header         Connection "upgrade";
          client_max_body_size     0;
        }


	location /mz-kafka/ {
           proxy_pass {{clusters.mz.ingress.base_url}}/mz-kafka/;
        }

	location /dmz-kafka/ {
           proxy_pass {{clusters.dmz.ingress.base_url}}/dmz-kafka/;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
}

stream {
    server {
        listen {{postgres.port}};  
        proxy_pass {{postgres.host}}:{{postgres.port}};
    }

    server {
        listen {{activemq.nodeport}};  # For activemq. Connecting to nodeport
        proxy_pass {{clusters.mz.nodeport_node}}:{{activemq.nodeport}};
    }
    server {
        listen {{minio.nodeport}};  # For minio. Connecting to nodeport
        proxy_pass {{clusters.mz.nodeport_node}}:{{minio.nodeport}};
    }

}
