##################### Dynamic Properties - this may change for different deployemnts ##############################
# Database hostname
mosip.ida.database.hostname=172.16.17.4
# Database port
mosip.ida.database.port=9001
# Database user
mosip.ida.database.user=idauser
# Database password (encrypted)
mosip.ida.database.password=Mosip@dev123

# Kernel auth client ID for IDA
mosip.ida.auth.clientId=
# Kernel auth secret key for IDA
mosip.ida.auth.secretKey=
# Kernel auth application ID for IDA
mosip.ida.auth.appId=ida



######################## Spring and Hibernate Configurations ####################
# ***************** Postgres Properties ***********************
javax.persistence.jdbc.driverClassName=org.postgresql.Driver
javax.persistence.jdbc.driver=org.postgresql.Driver
javax.persistence.jdbc.url=jdbc:postgresql://${mosip.ida.database.hostname}:${mosip.ida.database.port}/mosip_ida
javax.persistence.jdbc.user=${mosip.ida.database.user}
javax.persistence.jdbc.username=${mosip.ida.database.user}
javax.persistence.jdbc.password=${mosip.ida.database.password}
javax.persistence.jdbc.schema=ida
javax.persistence.jdbc.uinHashTable=uin_hash_salt
javax.persistence.jdbc.uinEncryptTable=uin_encrypt_salt

# *********** Hibernate Properties *************
hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
hibernate.jdbc.lob.non_contextual_creation=true
hibernate.hbm2ddl.auto=none
hibernate.show_sql=true
hibernate.format_sql=true
hibernate.connection.charSet=utf8
hibernate.cache.use_second_level_cache=false
hibernate.cache.use_query_cache=false
hibernate.cache.use_structured_entries=false
hibernate.generate_statistics=false
spring.datasource.initialization-mode=never


#Swagger
swagger.base-url=${mosip.base.url}
application.env.local=false

#TODO Temporary config for actuator. To be removed in production.
management.endpoint.restart.enabled=true


######################### ID-Authentication Application Configurations ##############
# Application ID of IDA
application.id=IDA
#Application name of IDA
application.name=ID-Authentication

# Reference ID used for crypto manager in authentication
partner.reference.id=PARTNER
# Reference ID used for crypto manager in internal authentication
internal.reference.id=INTERNAL
# Reference ID used for crypto manager in authentication for biometrics
partner.biometric.reference.id=IDA-FIR
# Reference ID used for crypto manager in internal authentication for biometrics
internal.biometric.reference.id=INTERNAL


# Kernel Symmetric Key decryption bytes count for AAD 
ida.aad.lastbytes.num=16
# Kernel Symmetric Key decryption bytes count for Salt 
ida.salt.lastbytes.num=12

# Request timeout used across all REST API calls in IDA
mosip.ida.request.timeout.secs=10
# Common JSON media type used across all REST API calls in IDA
mosip.ida.request.mediaType=application/json

#*** ID-Authentication Mapping json configurations ***
# IDA Mapping JSON file name
ida.mapping.json.filename=id-authentication-mapping.json
# IDA Mapping JSON file URI
mosip.ida.mapping.json-uri=${spring.cloud.config.uri}/${spring.application.name}/${spring.profiles.active}/${spring.cloud.config.label}/${ida.mapping.json.filename} 
# IDA Mapping JSON file property source
ida.mapping.property.source=url:${mosip.ida.mapping.json-uri}



#-------Bio SDK Integration ------------------------
ida.fingerprint.provider=ai.tech5.auth.service.T5AuthSDK
ida.face.provider=ai.tech5.auth.service.T5AuthSDK
ida.iris.provider=ai.tech5.auth.service.T5AuthSDK
ida.composite.biometric.provider=ai.tech5.auth.service.T5AuthSDK

#---------------------------------ID-Authentication Salt Generator---------------------------------------------------#
mosip.authentication.salt-generator.start-sequence=0
mosip.authentication.salt-generator.end-sequence=999
mosip.authentication.salt-generator.chunk-size=10
#---------------------------------kernel Salt Generator---------------------------------------------------#
mosip.kernel.salt-generator.db.key-alias=javax.persistence.jdbc
mosip.kernel.salt-generator.schemaName=${javax.persistence.jdbc.schema}
#----------------------------------------------------------------------------------------------------------#

# *********** REST-services *****************
# Kernel-Audit
audit.rest.uri=${mosip.base.url}/v1/auditmanager/audits
audit.rest.httpMethod=POST
audit.rest.headers.mediaType=${mosip.ida.request.mediaType}
#In seconds
audit.rest.timeout=${mosip.ida.request.timeout.secs}


# Kernel OTP Validator
otp-validate.rest.uri=${mosip.base.url}/v1/otpmanager/otp/validate
otp-validate.rest.httpMethod=GET
otp-validate.rest.headers.mediaType=${mosip.ida.request.mediaType}
otp-validate.rest.timeout=${mosip.ida.request.timeout.secs}


# Kernel OTP Generator
otp-generate.rest.uri=${mosip.base.url}/v1/authmanager/authenticate/sendotp
otp-generate.rest.httpMethod=POST
otp-generate.rest.headers.mediaType=${mosip.ida.request.mediaType}
otp-generate.rest.timeout=${mosip.ida.request.timeout.secs}


# Kernel Id Repo Service rest api-GET
id-repo-service.rest.uri=${mosip.base.url}/idrepository/v1/identity/uin/{uin}?type={type}
id-repo-service.rest.httpMethod=GET
id-repo-service.rest.headers.mediaType=${mosip.ida.request.mediaType}
id-repo-service.rest.timeout=${mosip.ida.request.timeout.secs}

# Kernel Id Repo Service Auth rest api-GET
id-repo-service-auth.rest.uri=${mosip.base.url}/idrepository/v1/identity/uin/{uin}
id-repo-service-auth.rest.httpMethod=GET
id-repo-service-auth.rest.headers.mediaType=${mosip.ida.request.mediaType}
id-repo-service-auth.rest.timeout=${mosip.ida.request.timeout.secs}

# Mail Notification
mail-notification.rest.uri=${mosip.base.url}/v1/emailnotifier/email/send
mail-notification.rest.httpMethod=POST
mail-notification.rest.headers.mediaType=multipart/form-data
mail-notification.rest.timeout=${mosip.ida.request.timeout.secs}

# SMS Notification
sms-notification.rest.uri=${mosip.base.url}/v1/smsnotifier/sms/send
sms-notification.rest.httpMethod=POST
sms-notification.rest.headers.mediaType=${mosip.ida.request.mediaType}
sms-notification.rest.timeout=${mosip.ida.request.timeout.secs}

#Master Data - Template Single Language
id-masterdata-template-service.rest.uri=${mosip.base.url}/v1/masterdata/templates/{langcode}/{templatetypecode}
id-masterdata-template-service.rest.httpMethod=GET
id-masterdata-template-service.rest.headers.mediaType=${mosip.ida.request.mediaType}
id-masterdata-template-service.rest.timeout=${mosip.ida.request.timeout.secs}

#Master Data - Template Multi language
id-masterdata-template-service-multilang.rest.uri=${mosip.base.url}/v1/masterdata/templates/templatetypecodes/{code}
id-masterdata-template-service-multilang.rest.httpMethod=GET
id-masterdata-template-service-multilang.rest.headers.mediaType=${mosip.ida.request.mediaType}
id-masterdata-template-service-multilang.rest.timeout=${mosip.ida.request.timeout.secs}

#Master Data - Device verification Service
device-verification-service.rest.uri=${mosip.base.url}/v1/masterdata/deviceprovidermanagement/validate
device-verification-service.rest.httpMethod=POST
device-verification-service.rest.headers.mediaType=${mosip.ida.request.mediaType}
device-verification-service.rest.timeout=${mosip.ida.request.timeout.secs}

# Encryption Service
encrypt-service.rest.uri=${mosip.base.url}/v1/cryptomanager/encrypt
encrypt-service.rest.httpMethod=POST
encrypt-service.rest.headers.mediaType=${mosip.ida.request.mediaType}
encrypt-service.rest.timeout=${mosip.ida.request.timeout.secs}

# Decryption Service
decrypt-service.rest.uri=${mosip.base.url}/v1/cryptomanager/decrypt
decrypt-service.rest.httpMethod=POST
decrypt-service.rest.headers.mediaType=${mosip.ida.request.mediaType}
decrypt-service.rest.timeout=${mosip.ida.request.timeout.secs}

#USERID-RID-MAPPING#
userid-rid.rest.uri=${mosip.base.url}/v1/authmanager/rid/{appId}/{uid}
userid-rid.rest.httpMethod=GET
userid-rid.rest.headers.mediaType=${mosip.ida.request.mediaType}
userid-rid.rest.timeout=${mosip.ida.request.timeout.secs}

#RID-UIN-MAPPING#
rid-uin.rest.uri=${mosip.base.url}/idrepository/v1/identity/rid/{rid}?type={type}
rid-uin.rest.httpMethod=GET
rid-uin.rest.headers.mediaType=${mosip.ida.request.mediaType}
rid-uin.rest.timeout=${mosip.ida.request.timeout.secs}

#RID-UIN-MAPPING WITHOUT TYPE#
rid-uin-auth.rest.uri=${mosip.base.url}/idrepository/v1/identity/rid/{rid}
rid-uin-auth.rest.httpMethod=GET
rid-uin-auth.rest.headers.mediaType=${mosip.ida.request.mediaType}
rid-uin-auth.rest.timeout=${mosip.ida.request.timeout.secs}
#VID-UIN-MAPPING#
vid-service.vid-uin.rest.uri=${mosip.base.url}/idrepository/v1/vid/{vid}
vid-service.vid-uin.rest.httpMethod=GET
vid-service.vid-uin.rest.headers.mediaType=${mosip.ida.request.mediaType}
vid-service.vid-uin.rest.timeout=${mosip.ida.request.timeout.secs}

#IDREPO-VID-UPDATESTATUS#
id-repo-service-vidupdate-status.rest.uri=${mosip.base.url}/idrepository/v1/vid/{vid}
id-repo-service-vidupdate-status.rest.httpMethod=PATCH
id-repo-service-vidupdate-status.rest.headers.mediaType=${mosip.ida.request.mediaType}
id-repo-service-vidupdate-status.rest.timeout=${mosip.ida.request.timeout.secs} 

# Gender Type Service rest api-GET
id-masterdata-gender-service.rest.uri=${mosip.base.url}/v1/masterdata/gendertypes
id-masterdata-gender-service.rest.httpMethod=GET
id-masterdata-gender-service.rest.headers.mediaType=${mosip.ida.request.mediaType}
id-masterdata-gender-service.rest.timeout=${mosip.ida.request.timeout.secs}

# Title Service rest api-GET
id-masterdata-title-service.rest.uri=${mosip.base.url}/v1/masterdata/title
id-masterdata-title-service.rest.httpMethod=GET
id-masterdata-title-service.rest.headers.mediaType=${mosip.ida.request.mediaType}
id-masterdata-title-service.rest.timeout=${mosip.ida.request.timeout.secs}

# TokeId Generator rest api-GET
token-id-generator.rest.uri=${mosip.base.url}/v1/tokenidgenerator/{uin}/{partnercode}
token-id-generator.rest.httpMethod=GET
token-id-generator.rest.headers.mediaType=${mosip.ida.request.mediaType}
token-id-generator.rest.timeout=${mosip.ida.request.timeout.secs}

#Auth token
auth-token-generator.rest.uri=${mosip.base.url}/v1/authmanager/authenticate/clientidsecretkey
auth-token-validator.rest.uri=${mosip.base.url}/v1/authmanager/authorize/validateToken
auth-token-generator.rest.clientId=${mosip.ida.auth.clientId}
auth-token-generator.rest.secretKey=${mosip.ida.auth.secretKey}
auth-token-generator.rest.appId=${mosip.ida.auth.appId}

#Digital Signature token
digital-signature-sign-service.rest.uri=${mosip.base.url}/v1/signature/sign
digital-signature-sign-service.rest.httpMethod=POST
digital-signature-sign-service.rest.headers.mediaType=${mosip.ida.request.mediaType}
digital-signature-sign-service.rest.timeout=${mosip.ida.request.timeout.secs}



########################## Functional configurations ################################
# Default Match Threshold
demo.threshold=60
#Set up  Authentication Quality Single Threshold for Fingerprint (Minutiea)
fmr.single.threshold=60
#Set up  Authentication Quality Single Threshold for Fingerprint (Image)
fir.single.threshold=60


#Set up  Authentication Quality Single Threshold for IRIS 
iir.single.threshold=60

#Set up  Authentication Quality Threshold for Face/Photo 
fid.single.threshold=60

#Set up  Authentication Quality Composite Threshold for any modality (finger, iris, face)
bio.composite.threshold=60

#TODO TO BE REMOVED
#Set up  Authentication Quality Composite Threshold for Two Fingerprints (Minutiea)
fmr.composite.threshold=60
#Set up  Authentication Quality Composite Threshold for more than Two Fingerprints (Minutiea)
fmr.multi.threshold=60
#Set up  Authentication Quality Composite Threshold for IRIS 
iir.composite.threshold=60

#to retrieve uin salt value
ida.uin.salt.modulo=1000



#**************** IDA DEMO NORMALISATION *************

# This is used to define the seperator for normalising regex(pattern) and the replacement word. Default is set to '='.
ida.norm.sep==

####### Demo Name/Address Normalization Regular Expressions and their replacement configurations
#Format:
# ida.demo.<name/address/common>.normalization.regex.<languageCode/any>[<sequential index starting from 0>]=<reqular expression>${ida.norm.sep}<replacement string>
# If replacement string is not specified that regular expression will be replaced with empty string 
# Note: The sequence should not break in the middle, otherwise all normalization properties will not be read for the particular type.
#

#**************** IDA DEMO NORMALISATION address(eng)*************
ida.demo.address.normalization.regex.eng[0]=[CcSsDdWwHh]/[Oo]
ida.demo.address.normalization.regex.eng[1]=(M|m|D|d)(rs?)(.)
ida.demo.address.normalization.regex.eng[2]=(N|n)(O|o)(\\.)?
 
ida.demo.address.normalization.regex.eng[3]=[aA][pP][aA][rR][tT][mM][eE][nN][tT]${ida.norm.sep}apt 
ida.demo.address.normalization.regex.eng[4]=[sS][tT][rR][eE][eE][tT]${ida.norm.sep}st 
ida.demo.address.normalization.regex.eng[5]=[rR][oO][aA][dD]${ida.norm.sep}rd 
ida.demo.address.normalization.regex.eng[6]=[mM][aA][iI][nN]${ida.norm.sep}mn 
ida.demo.address.normalization.regex.eng[7]=[cC][rR][oO][sS][sS]${ida.norm.sep}crs 
ida.demo.address.normalization.regex.eng[8]=[oO][pP][pP][oO][sS][iI][tT][eE]${ida.norm.sep}opp 
ida.demo.address.normalization.regex.eng[9]=[mM][aA][rR][kK][eE][tT]${ida.norm.sep}mkt 

ida.demo.address.normalization.regex.eng[10]=1[sS][tT]${ida.norm.sep}1 
ida.demo.address.normalization.regex.eng[11]=1[tT][hH]${ida.norm.sep}1 
ida.demo.address.normalization.regex.eng[12]=2[nN][dD]${ida.norm.sep}2 
ida.demo.address.normalization.regex.eng[13]=2[tT][hH]${ida.norm.sep}2 
ida.demo.address.normalization.regex.eng[14]=3[rR][dD]${ida.norm.sep}3 
ida.demo.address.normalization.regex.eng[15]=3[tT][hH]${ida.norm.sep}3 
ida.demo.address.normalization.regex.eng[16]=4[tT][hH]${ida.norm.sep}4 
ida.demo.address.normalization.regex.eng[17]=5[tT][hH]${ida.norm.sep}5 
ida.demo.address.normalization.regex.eng[18]=6[tT][hH]${ida.norm.sep}6 
ida.demo.address.normalization.regex.eng[19]=7[tT][hH]${ida.norm.sep}7 
ida.demo.address.normalization.regex.eng[20]=8[tT][hH]${ida.norm.sep}8 
ida.demo.address.normalization.regex.eng[21]=9[tT][hH]${ida.norm.sep}9 
ida.demo.address.normalization.regex.eng[22]=0[tT][hH]${ida.norm.sep}0 

#**************** IDA DEMO NORMALISATION  common*************
# Note: the common normalization attributes will be replaced at the end.
ida.demo.common.normalization.regex.any[0]=[\\.|,|\\-|\\*|\\(|\\)|\\[|\\]|`|\\'|/|\\|#|\"]
# Trailing space is removed from property. As a workaround first replacing with " ." then removing the "."
ida.demo.common.normalization.regex.any[1]=\\s+${ida.norm.sep} .
ida.demo.common.normalization.regex.any[2]=\\.${ida.norm.sep}



# ********* ADMIN Configurations ************
#Configure N time period threshold for accepting auth/OTP/KYC request for a country
authrequest.received-time-allowed.minutes=30

# Language Code
ida.errormessages.default-lang=en

# Phonetics Language configuration
# mosip.phonetic.lang.ara=arabic-ar
# mosip.phonetic.lang.fra=french-fr
# mosip.phonetic.lang.eng=english-en

# ******** IDA OTP Context ********
ida.otp.context=ida-auth-otp

# *********** Otp Flooding ************
#Configure Time limit for OTP Flooding scenario 
otp.request.flooding.duration=3
#Configure no of requests for OTP Flooding scenario 
otp.request.flooding.max-count=3

# *********** Mail Configuration *****************
ida.auth.mail.content.template=auth-email-content
ida.auth.mail.subject.template=auth-email-subject
ida.otp.mail.content.template=otp-email-content
ida.otp.mail.subject.template=otp-email-subject

# *********** SMS Configuration *****************
ida.auth.sms.template=auth-sms
ida.otp.sms.template=otp-sms

# UIN Masking
#Configure the no of digits for a masked UIN
notification.uin.masking.charcount=8

#**************** Notification  *************
notification.email=EMAIL
notification.sms=SMS

#*************** Notification Date/time Format **********
notification.date.format=dd-MM-yyyy
notification.time.format=HH:mm:ss

#********* Internal Auth Type *********
#Configure authentication types permissable for internal authentication 
internal.auth.types.allowed=otp,bio-FIR,bio-IIR,bio-FACE

#************ E-KYC********
#Configure authentications permissable for e-KYC for a country
ekyc.auth.types.allowed=otp,bio-FIR,bio-IIR,bio-FACE

#***********AuthType Enable***********
#Configure authentications permissable for a country
auth.types.allowed=demo,otp,bio-FIR,bio-IIR,bio-FACE

#***********Certificate type************
ida.jws.certificate.type=X.509
ida.jws.certificate.organization=Let's Encrypt
ida.jws.certificate.algo=RS256

#---------------- date pattern -------------------
datetime.pattern=yyyy-MM-dd'T'HH:mm:ss.SSSXXX

#------------id's---------------------
ida.api.id.auth=mosip.identity.auth
ida.api.id.kyc=mosip.identity.kyc
ida.api.id.otp=mosip.identity.otp
ida.api.id.staticpin=mosip.identity.staticpin
ida.api.id.vid=mosip.identity.vid
ida.api.id.internal=mosip.identity.auth.internal
ida.api.id.auth.transactions=mosip.identity.authtransactions.read
ida.api.id.otp.internal=mosip.identity.otp.internal
ida.api.id.authtype.status.read=mosip.identity.authtype.status.read
ida.api.id.authtype.status.update=mosip.identity.authtype.status.update

#------------version's---------------------
ida.api.version.auth=1.0
ida.api.version.kyc=1.0
ida.api.version.otp=1.0
ida.api.version.staticpin=1.0
ida.api.version.vid=1.0
ida.api.version.internal=1.0
ida.api.version.auth.transactions=1.0
ida.api.version.otp.internal=1.0
ida.api.version.authtype.status.read=1.0
ida.api.version.authtype.status.update=1.0


#------ Static Token Configuration ---------------
#Configure preference to turn on/off Tokenization for a Country,  as a process
static.token.enable=true

#-------Config for UIN/VID-------------
#Configure the idtype to be supported for Authentication/KYC/OTP Request
request.idtypes.allowed=VID,UIN

#-------Config for UIN/VID in Internal Auth-------------
#Configure the idtype to be supported for Internal Auth Request
request.idtypes.allowed.internalauth=UIN,USERID,VID


###################### Mocking Configurations ################################
#-------Mocking of Partner Id------------
partner.1873299273={"partnerName":"Sample Partner 1", "policyId":"92834787293","status":"active"}
partner.1873299274={"partnerName":"Sample Partner 2", "policyId":"92834787294","status":"active"}
partner.1873299275={"partnerName":"Sample Partner 3", "policyId":"92834787295","status":"active"}
partner.1873299276={"partnerName":"Sample Partner 4", "policyId":"92834787296","status":"active"}
partner.1873299300={"partnerName":"Sample Partner 5", "policyId":"92834787293","status":"active"}
partner.1873299301={"partnerName":"Sample Partner 6", "policyId":"92834787290","status":"active"}

partner.1873299776={"policyId":"9903348702934","status":"active"}
partner.1873293764={"policyId":"9903348702934","status":"inactive"}
partner.18248239994={"policyId":"","status":"active"}

#-------Mocking of Policy Id------------
policy.92834787293={ "policies": { "authPolicies": [ { "authType": "otp-request", "mandatory": false }, { "authType": "otp", "mandatory": false }, { "authType": "demo", "mandatory": false }, { "authType": "kyc", "mandatory": false }, { "authType": "pin", "mandatory": false }, { "authType": "bio", "authSubType": "FINGER", "mandatory": false }, { "authType": "bio", "authSubType": "IRIS", "mandatory": false }, { "authType": "bio", "authSubType": "FACE", "mandatory": false } ], "allowedKycAttributes": [ { "attributeName": "fullName", "required": true }, { "attributeName": "dateOfBirth", "required": true }, { "attributeName": "gender", "required": true }, { "attributeName": "phone", "required": true }, { "attributeName": "email", "required": true }, { "attributeName": "addressLine1", "required": true }, { "attributeName": "addressLine2", "required": true }, { "attributeName": "addressLine3", "required": true }, { "attributeName": "region", "required": true }, { "attributeName": "province", "required": true }, { "attributeName": "city", "required": true }, { "attributeName": "postalCode", "required": false }, { "attributeName": "photo", "required": true } ] } }
policy.92834787294={ "policies": { "authPolicies": [{ "authType": "otp-request", "mandatory": false }, { "authType": "otp", "mandatory": true }, { "authType": "demo", "mandatory": false }, { "authType": "kyc", "mandatory": false }, { "authType": "pin", "mandatory": false }, { "authType": "bio", "authSubType": "FINGER", "mandatory": false }, { "authType": "bio", "authSubType": "IRIS", "mandatory": false }, { "authType": "bio", "authSubType": "FACE", "mandatory": false }], "allowedKycAttributes": [{ "attributeName": "fullName", "required": true }, { "attributeName": "dateOfBirth", "required": true }, { "attributeName": "gender", "required": true }, { "attributeName": "phone", "required": true }, { "attributeName": "email", "required": true }, { "attributeName": "addressLine1", "required": true }, { "attributeName": "addressLine2", "required": true }, { "attributeName": "addressLine3", "required": true }, { "attributeName": "region", "required": true }, { "attributeName": "province", "required": true }, { "attributeName": "city", "required": true }, { "attributeName": "postalCode", "required": false }, { "attributeName": "photo", "required": true }] } }
policy.92834787295={ "policies": { "authPolicies": [{ "authType": "otp-request", "mandatory": false }, { "authType": "otp", "mandatory": false }, { "authType": "demo", "mandatory": false }, { "authType": "kyc", "mandatory": false }, { "authType": "pin", "mandatory": false }], "allowedKycAttributes": [{ "attributeName": "fullName", "required": true },{ "attributeName": "gender", "required": true }, { "attributeName": "addressLine1", "required": true }, { "attributeName": "addressLine2", "required": true }, { "attributeName": "addressLine3", "required": true }, { "attributeName": "region", "required": true }, { "attributeName": "province", "required": true }, { "attributeName": "city", "required": true }, { "attributeName": "postalCode", "required": false }, { "attributeName": "photo", "required": true }] } }
policy.92834787296={ "policies": { "authPolicies": [ { "authType": "kyc", "mandatory": false }, { "authType": "pin", "mandatory": false }, { "authType": "bio", "authSubType": "FINGER", "mandatory": false } ], "allowedKycAttributes": [ { "attributeName": "fullName", "required": true }, { "attributeName": "dateOfBirth", "required": true }, { "attributeName": "gender", "required": true }, { "attributeName": "phone", "required": true }, { "attributeName": "email", "required": true }, { "attributeName": "addressLine1", "required": true }, { "attributeName": "addressLine2", "required": true }, { "attributeName": "addressLine3", "required": true }, { "attributeName": "region", "required": true }, { "attributeName": "province", "required": true }, { "attributeName": "city", "required": true }, { "attributeName": "postalCode", "required": false }, { "attributeName": "photo", "required": true } ] } }
policy.9903348702934={ "policies": { "authPolicies": [ { "authType": "otp", "mandatory": false }, { "authType": "pin", "mandatory": false }, { "authType": "bio", "authSubType": "FINGER", "mandatory": true }, { "authType": "bio", "authSubType": "IRIS", "mandatory": false }, { "authType": "bio", "authSubType": "FACE", "mandatory": false } ], "allowedKycAttributes": [ { "attributeName": "UIN", "required": false, "masked": true }, { "attributeName": "fullName", "required": true }, { "attributeName": "dateOfBirth", "required": true }, { "attributeName": "gender", "required": true }, { "attributeName": "phone", "required": true }, { "attributeName": "email", "required": true }, { "attributeName": "addressLine1", "required": true }, { "attributeName": "addressLine2", "required": true }, { "attributeName": "addressLine3", "required": true }, { "attributeName": "region", "required": true }, { "attributeName": "province", "required": true }, { "attributeName": "city", "required": true }, { "attributeName": "postalCode", "required": false }, { "attributeName": "photo", "required": true } ] } }
policy.0983222={ "policies": { "authPolicies": [ { "authType": "otp", "mandatory": true }, { "authType": "pin", "mandatory": true }, { "authType": "bio", "authSubType": "FINGER", "mandatory": true }, { "authType": "bio", "authSubType": "IRIS", "mandatory": false }, { "authType": "bio", "authSubType": "FACE", "mandatory": false } ], "allowedKycAttributes": [ { "attributeName": "UIN", "required": false, "masked": true }, { "attributeName": "fullName", "required": true }, { "attributeName": "dateOfBirth", "required": true }, { "attributeName": "gender", "required": true }, { "attributeName": "phone", "required": true }, { "attributeName": "email", "required": true }, { "attributeName": "addressLine1", "required": true }, { "attributeName": "addressLine2", "required": true }, { "attributeName": "addressLine3", "required": true }, { "attributeName": "region", "required": true }, { "attributeName": "province", "required": true }, { "attributeName": "city", "required": true }, { "attributeName": "postalCode", "required": false }, { "attributeName": "photo", "required": true } ] } }

#-------Mocking of License Key and MISP------------
licenseKey.735899345 ={ "mispId": "5479834598", "expiryDt": "2031-03-07T12:58:41.762Z", "status": "active" }
licenseKey.629877671 ={ "mispId": "9870862555", "expiryDt": "2031-03-07T12:58:41.762Z", "status": "active" }

licenseKey.635899234={"mispId" :"5479834983","expiryDt":"2031-03-07T12:58:41.762Z","status":"inactive"}
licenseKey.135898653={"mispId":"5479833455","expiryDt":"2019-03-07T12:58:41.762Z","status":"active"}

#-------Mocking of MISP-Partner Mapping------------
misp.partner.mapping.5479834598.1873299273=true
misp.partner.mapping.5479834598.1873299274=true
misp.partner.mapping.5479834598.1873299275=true
misp.partner.mapping.5479834598.1873299276=true
misp.partner.mapping.9870862555.1873299300=false
misp.partner.mapping.5479834983.1873299273=true
misp.partner.mapping.5479833455.1873299273=true
misp.partner.mapping.5479834598.1873299776=true
misp.partner.mapping.5479834598.1873299301=true
