# ---------DB connection---------------

# Determines driver name
javax.persistence.jdbc.driver=org.postgresql.Driver

# Determines database connection ip
mosip.database.ip=172.16.17.4

# Determines database connection port
mosip.database.port=9001

# Determines database connection URL
javax.persistence.jdbc.url=jdbc:postgresql://${mosip.database.ip}:${mosip.database.port}/mosip_prereg?useSSL=false

# Determines database user name
javax.persistence.jdbc.user=prereguser

# Determines database password
javax.persistence.jdbc.password=Mosip@dev123

#Hibernate properties
hibernate.hbm2ddl.auto=update
hibernate.show_sql=false
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
hibernate.jdbc.lob.non_contextual_creation=true

#Hickari logs
logging.level.com.zaxxer.hikari=DEBUG


#--------- Common properties------------

#Project Version
version=1.0

#ID Validator
application.id=pre-registration

#Regex for Pre-Registration id
preregistration.preid.regex=[0-9]+

#Demographic service version
demographic.service.version=v1

#Demographic service context path
demographic.service.env=http://pre-registration-demographic-service:9092
demographic.service.contextpath=preregistration/${demographic.service.version}

#Demographic service URL
demographic.resource.url=${demographic.service.env}/${demographic.service.contextpath}

#Document service version
document.service.version=v1

#Document service context path
document.service.env=http://pre-registration-document-service:9093
document.service.contextpath=preregistration/${document.service.version}

#Document service URL 
document.resource.url=${document.service.env}/${document.service.contextpath}

#Booking service version
booking.service.version=v1

#Booking service context path
booking.service.env=http://pre-registration-booking-service:9095
booking.service.contextpath=preregistration/${booking.service.version}

#Booking service URL
booking.resource.url=${booking.service.env}/${booking.service.contextpath}

#BatchJob-service version
batch.service.version=v1

#BatchJob-service context path
batch.service.env=http://pre-registration-batchjob-service:9096
batch.service.contextpath=preregistration/${batch.service.version}/batch

#batchjob service URL
batch.resource.url=${batch.service.env}/${batch.service.contextpath}

#Notification service context path
notification.service.version=v1
notification.service.env=http://pre-registration-notification-service:9099
notification.service.contextpath=preregistration/${notification.service.version}

# Determines master service version
masterdata.service.version=v1
# Determines master service context path
masterdata.service.env=http://kernel-masterdata-service:8086
masterdata.service.contextpath=masterdata

# masterdata service URL
masterdata.resource.url=${masterdata.service.env}/${masterdata.service.version}/${masterdata.service.contextpath}

# Determines email service of kernel
email.service.env=http://kernel-emailnotification-service:8083

# Determines email service context path of kernel
email.service.contextpath=emailnotifier

# Determines SMS service of kernel
sms.service.env=http://kernel-smsnotification-service:8084

# Determines SMS service context path of kernel
sms.service.contextpath=smsnotifier

# Determines Audit service of kernel
audit.service.env=http://kernel-auditmanager-service:8081

# Determines Audit service context path of kernel
audit.service.contextpath=auditmanager

# Determines Crypto service of kernel
crypto.service.env=http://kernel-cryptomanager-service:8087

# Determines Crypto service context path of kernel
crypto.service.contextpath=cryptomanager

# Determines Authentication service of kernel
kernel.auth.env=http://kernel-auth-service:8091

# Determines Authentication service context path of kernel
kernel.auth.contextpath=authmanager

kernel.prid.env=http://kernel-pridgenerator-service:8100
kernel.prid.contextpath=pridgenerator

#----------Auth-------------------

# Determines send otp resource URL of kernel
sendOtp.resource.url=${kernel.auth.env}/${masterdata.service.version}/${kernel.auth.contextpath}

# Determines 
otpChannel.mobile=mobile
otpChannel.email=email
userIdType=USERID
appId=preregistration

mosip.preregistration.sendotp.id=mosip.pre-registration.login.sendotp
mosip.preregistration.validateotp.id=mosip.pre-registration.login.useridotp
mosip.preregistration.invalidatetoken.id=mosip.pre-registration.login.invalidate
mosip.preregistration.config.id=mosip.pre-registration.login.config
mosip.preregistration.login.service.version=1.0
validationStatus=success
context=auth-otp
clientId=pre-registration
secretKey=41fcabc1-dd48-4c40-951a-b80e0af34c47

auth.server.validate.url=http://172.16.17.4/v1/authmanager/authorize/admin/validateToken

#--------- Demographic------------

#Document service URL for fetching booking details
appointmentResourse.url=${booking.resource.url}

#id for demographic create application
mosip.preregistration.demographic.create.id=mosip.pre-registration.demographic.create
#id for demographic update application
mosip.preregistration.demographic.update.id=mosip.pre-registration.demographic.update
#id for demographic status update
mosip.preregistration.demographic.update.status.id=mosip.pre-registration.demographic.status.update
#id to get the demographic basic data by user id
mosip.preregistration.demographic.retrieve.basic.id=mosip.pre-registration.demographic.retrieve.basic
#id to get the demographic detailed data by pre-registration
mosip.preregistration.demographic.retrieve.details.id=mosip.pre-registration.demographic.retrieve.details
#id to get the demographic application status
mosip.preregistration.demographic.retrieve.status.id=mosip.pre-registration.demographic.retrieve.status
#id to get the demographic updated date time for the list of preregistration ids
mosip.preregistration.demographic.retrieve.date.id=mosip.pre-registration.demographic.retrieve.date
#id for demographic delete application
mosip.preregistration.demographic.delete.id=mosip.pre-registration.demographic.delete

# Determines the size of page to define the number of pages for demographic service
mosip.pregistration.pagesize=20

mosip.kernel.idobjectvalidator.masterdata.documentcategories.lang.rest.uri=${masterdata.resource.url}/documentcategories/{langcode}
mosip.kernel.idobjectvalidator.masterdata.languages.rest.uri=${masterdata.resource.url}/languages
mosip.kernel.idobjectvalidator.masterdata.gendertypes.rest.uri=${masterdata.resource.url}/gendertypes
mosip.kernel.idobjectvalidator.masterdata.documentcategories.rest.uri=${masterdata.resource.url}/documentcategories
mosip.kernel.idobjectvalidator.masterdata.documenttypes.rest.uri=${masterdata.resource.url}/documenttypes/{documentcategorycode}/{langcode}
mosip.kernel.idobjectvalidator.masterdata.locations.rest.uri=${masterdata.resource.url}/locations/{langcode}
mosip.kernel.idobjectvalidator.masterdata.locationhierarchy.rest.uri=${masterdata.resource.url}/locations/locationhierarchy/{hierarchyname} 
mosip.kernel.idobjectvalidator.masterdata.documentcategories.lang.rest.uri=${masterdata.resource.url}/documentcategories/{langcode}
#Pre-reg identity config file name
preregistartion.config.identityjson=PreRegistrationIdentitiyMapping.json

mosip.kernel.idobjectvalidator.referenceValidator=io.mosip.kernel.idobjectvalidator.impl.IdObjectReferenceValidator

#Prid service call
mosip.io.prid.url=${kernel.prid.env}/${masterdata.service.version}/${kernel.prid.contextpath}/prid

# ----------- Document -------------

# masterdata url to get doctype and catcode
mosip.kernel.masterdata.validdoc.rest.uri=${masterdata.resource.url}/validdocuments/{langcode}

#File size configuration
spring.servlet.multipart.max-file-size=-1
spring.servlet.multipart.max-request-size=-1

# Determines maximum size of file allowed uploaded in document service api (in mb)
max.file.size=2

# Determines file extension allowed for document service api
preregistration.document.extention=PDF,JPEG,PNG,JPG
# Username to access hdfs. Change this to application username (regprocessor,prereg or idrepo)
mosip.kernel.fsadapter.hdfs.user-name=prereg

# Password for hdfs user

# Password for hdfs user
#id for document upload
mosip.preregistration.document.upload.id=mosip.pre-registration.document.upload
#id for document copy
mosip.preregistration.document.copy.id=mosip.pre-registration.document.copy
#id for fetching document metadata
mosip.preregistration.document.fetch.metadata.id=mosip.pre-registration.document.fetch.metadata
#id for fetching document content
mosip.preregistration.document.fetch.content.id=mosip.pre-registration.document.fetch.content
#id for document delete by preregistration id
mosip.preregistration.document.delete.id=mosip.pre-registration.document.delete
#id for document delete by document id
mosip.preregistration.document.delete.specific.id=mosip.pre-registration.document.delete.specific

#Enable or disable the virus scanner(true/false)
mosip.preregistration.document.scan=true

# ----------- Booking -------------

# Determines the Number of days of Availability to be synced from Master Data to Pre-regsistration system
preregistration.availability.sync=37

# Determines the Number of days in Appointment availability calendar to be displayed
preregistration.availability.noOfDays=140

# Determines the number of days in between the Date of Booking and the First Appointment Date to be shown
preregistration.booking.offset=2

# Determines the Number of hours before an Appointment date the Individual can Rebook an Appointment
preregistration.timespan.rebook=24

# Determines the Number of hours before an Appointment date the Individual can cancel an Appointment 
preregistration.timespan.cancel=24

# To get the country specfic time zone for cancel and re-book
preregistration.country.specific.zoneId=GMT+05:30

# Notification url
notification.url=${notification.service.env}/${notification.service.version}/${notification.service.contextpath}/notification

# masterdata service URL for fetching registration centers
regCenter.url=${masterdata.resource.url}/registrationcenters

# Master service URL for fetching registration centers holiday
holiday.url=${masterdata.resource.url}/getregistrationcenterholidays/

holiday.exceptional.url=${masterdata.resource.url}/exceptionalholidays
working.day.url=${masterdata.resource.url}/workingdays


#id for synching availability data
mosip.preregistration.booking.availability.sync.id=mosip.pre-registration.appointment.availability.sync
#id for appointment booking
mosip.preregistration.booking.book.id=mosip.pre-registration.booking.book
#id for fetching appointment details
mosip.preregistration.booking.fetch.booking.id=mosip.pre-registration.appointment.fetch
#id for appointment cancellation
mosip.preregistration.booking.cancel.id=mosip.pre-registration.appointment.cancel
#id for appointment deletion
mosip.preregistration.booking.delete.id=mosip.preregistration.booking.delete
#id for fetching availability days for registration center id
mosip.preregistration.booking.fetch.availability.id=mosip.pre-registration.appointment.availability
#id for fetching booked preregistration ids for the date range
mosip.preregistration.booking.fetchPreidByDate.id=mosip.pre-registration.appointment.ids
#id for updating availability
mosip.preregistration.booking.availability.increase.id=mosip.preregistration.booking.availability.increase
#id for checking the availability
mosip.preregistration.booking.availability.check.id=mosip.preregistration.booking.availability.check
#id for deleting old bookings
mosip.preregistration.booking.delete.old.id=mosip.preregistration.booking.delete.old
#id for parse exception in booking
mosip.preregistration.booking.exception.id=mosip.preregistration.booking.parse.exception

# ----------- BatchJob--------

# Determines application id for batch job authenticaion
mosip.batch.token.authmanager.appId=pre-registration

# Determines user name for batch job authenticaion
mosip.batch.token.authmanager.userName=pre-registration

# Determines password for batch job authenticaion
mosip.batch.token.authmanager.password=41fcabc1-dd48-4c40-951a-b80e0af34c47

# Determines URL for batch job authenticaion
mosip.batch.token.authmanager.url=${kernel.auth.env}/${masterdata.service.version}/${kernel.auth.contextpath}/authenticate/clientidsecretkey

mosip.batch.token.request.id=

# Determines the Time of the day, batch job should be intiated
preregistration.job.schedule.cron.consumedStatusJob=0 0 0 * * ?
preregistration.job.schedule.cron.slotavailability=0 0 0 * * ?
preregistration.job.schedule.cron.expiredStatusJob=0 0 0 * * ?

#Schema name for batch job table
spring.batch.tablePrefix=PREREG.BATCH_


#Booking service URL for creating time slots
bookingAvailablity.url=${booking.resource.url}/appointment/availability/sync

#BatchJob-service URL for updating the consumed status
updateConsumedStatus.url=${batch.resource.url}/consumedStatus

#BatchJob-service URL for updating to expiredStatus
expiredStatus.url=${batch.resource.url}/expiredStatus

batch.appointment.cancel=${batch.service.env}/preregistration/v1

# ----------- BatchJob-Service--------

# Determines request & response id of batchjob-service
mosip.preregistration.batchjob.service.consumed.id=mosip.pre-registration.batchjob.service.consumed
mosip.preregistration.batchjob.service.expired.id=mosip.pre-registration.batchjob.service.expired


# ------------- core ----------------

#Kernel Service URL for Encryption and decryption 
cryptoResource.url=${crypto.service.env}/${masterdata.service.version}/${crypto.service.contextpath}

#Kernel service URL for Audit logging
audit.url=${audit.service.env}/${masterdata.service.version}/${audit.service.contextpath}/audits

#Kernel service URL for fetching templates
resource.template.url=${masterdata.resource.url}/templates

#Kernel service URL for sending emails
emailResourse.url=${email.service.env}/${masterdata.service.version}/${email.service.contextpath}/email/send

#Kernel service URL for sending sms 
smsResourse.url=${sms.service.env}/${masterdata.service.version}/${sms.service.contextpath}/sms/send




#-------Notification-----------
# Email template
email.acknowledgement.template=Email-Acknowledgement

# Email template subject
email.acknowledgement.subject.template=Acknowledgement-email-subject

# sms template
sms.acknowledgement.template=SMS-Acknowledgement

# Global config file name
global.config.file=application-${spring.profiles.active}.properties

#Pre-reg config file name
pre.reg.config.file=pre-registration-${spring.profiles.active}.properties

mosip.pre-registration.notification.id=mosip.pre-registration.notification.notify

cancel.appoinment.template=cancel-appointment

preregistartion.response = response
preregistartion.identity.fullName=fullName
preregistartion.demographicDetails=demographicDetails
preregistartion.identity.email=email
preregistartion.identity.phone=phone
preregistartion.identity=identity 

#--------QRCode------------
mosip.pre-registration.qrcode.generate.id=mosip.pre-registration.qrcode.generate
mosip.pre-registration.qrcode.service.version=1.0
qrversion=V1

#--------Data-sync----------
#id for retrieve all pre-registration ids API
mosip.id.preregistration.datasync.fetch.ids=mosip.pre-registration.datasync.fetch.ids
#id for storing cosumed pre-registration ids API
mosip.id.preregistration.datasync.store=mosip.pre-registration.datasync.store
#id for get preregistration id API
mosip.id.preregistration.datasync.fetch=mosip.pre-registration.datasync.fetch
#config parameter to define proof of address
poa.url=proofOfAddress
#config parameter to define proof of identity
poi.url=proofOfIdentity
#config parameter to define proof of birth
pod.url=proofOfDateOfBirth
#config parameter to define proof of relationship
por.url=proofOfRelationship

#-------------------transliteration---------------

# Determines request & response id of transliteration-service
mosip.pre-registration.transliteration.transliterate.id=mosip.pre-registration.transliteration.transliterate

#--------UI params---------
# List of keys which UI will consume
ui.config.params=preregistration.availability.sync,preregistration.availability.noOfDays,mosip.supported-languages,mosip.primary-language,mosip.secondary-language,mosip.id.validation.identity.email,mosip.id.validation.identity.postalCode,mosip.id.validation.identity.phone,mosip.id.validation.identity.dateOfBirth,mosip.id.validation.identity.referenceIdentityNumber,mosip.default.dob.month,mosip.default.dob.day,mosip.kernel.otp.expiry-time,mosip.kernel.otp.validation-attempt-threshold,mosip.kernel.otp.default-length,mosip.kernel.sms.number.length,mosip.kernel.pin.length,preregistration.max.file.size,preregistration.recommended.centers.locCode,preregistration.nearby.centers,mosip.login.mode,preregistration.workflow.demographic,preregistration.workflow.documentupload,preregistration.workflow.booking,preregistration.auto.logout,preregistration.timespan.cancel,preregistration.timespan.rebook,preregistration.booking.offset,mosip.right_to_left_orientation,mosip.left_to_right_orientation,mosip.id.validation.identity.age,mosip.id.validation.identity.fullName.[*].value,mosip.id.validation.identity.addressLine1.[*].value,preregistration.documentupload.allowed.file.type,preregistration.documentupload.allowed.file.nameLength,preregistration.documentupload.allowed.file.size,mosip.preregistration.auto.logout.idle,mosip.preregistration.auto.logout.timeout,mosip.preregistration.auto.logout.ping,mosip.country.code,mosip.notificationtype,mosip.kernel.idobjectvalidator.masterdata.locations.locationNotAvailable
# This config is used for loading recommended centers based on the value of the config. The value depicts the location hierarchy code of the hierarchy based on which the recommended centers is loaded
preregistration.recommended.centers.locCode=5

# The Registration centers will be searched based on the distance value from the Geo location identified
preregistration.nearby.centers=2000

# Determines file upload type allowed in UI
preregistration.documentupload.allowed.file.type = application/pdf,image/jpeg,image/png,image/jpg

# Determines the file name length(with extension) allowed in UI
preregistration.documentupload.allowed.file.nameLength = 50

# Determines maximum size of file allowed uploaded in document service api (in bytes)
preregistration.documentupload.allowed.file.size = 2000000


# Determines idle condition(in seconds)
mosip.preregistration.auto.logout.idle=180

# Determines  pop up timer(in seconds)
mosip.preregistration.auto.logout.timeout=60

# Determines  to maintain iternal cycle & make sure value is not null (any value greater than zero)
mosip.preregistration.auto.logout.ping=30

# UI Modularity config files(Not used yet)
# Determines which stages of Pre-Registration can be switched off and switched on
preregistration.workflow.demographic=true/false
preregistration.workflow.documentupload=true/false
preregistration.workflow.booking=true/false 

mosip.preregistration.login.id.sendotp=mosip.pre-registration.login.sendotp
mosip.preregistration.login.id.validateotp=mosip.pre-registration.login.useridotp
mosip.preregistration.login.id.invalidatetoken=mosip.pre-registration.login.invalidate
mosip.preregistration.login.id.config=mosip.pre-registration.login.config

mosip.preregistration.booking.id.book=mosip.pre-registration.booking.book

mosip.preregistration.demographic.id.create=mosip.pre-registration.demographic.create
mosip.preregistration.demographic.id.update=mosip.pre-registration.demographic.update
mosip.preregistration.demographic.id.retrieve.date=mosip.pre-registration.demographic.retrieve.date

mosip.pre-registration.notification.id.send=mosip.pre-registration.notification.notify
mosip.pre-registration.qrcode.id.generate=mosip.pre-registration.qrcode.generate
mosip.preregistration.document.id.upload=mosip.pre-registration.document.upload
